[
    {
        "code": "// Function to lock or unlock doors\nfunction controlDoorLock(door, state) {\n    console.log(`${state} the ${door} door.`);\n    event.controlDoorLock(door, state);\n}\n\n// Function to check security camera feed\nfunction checkCameraFeed(camera) {\n    let feed = event.getCameraFeed(camera);\n    console.log(`Security camera feed from ${camera}: ${feed}`);\n    return feed;\n}\n\n// Function to detect motion\nfunction detectMotion(zone) {\n    let motion = event.detectMotion(zone);\n    console.log(`Motion detected in ${zone}: ${motion}`);\n    return motion;\n}\n\n// Function to activate security alarm\nfunction activateAlarm() {\n    console.log(\"Activating security alarm.\");\n    event.activateAlarm();\n}\n\n// Function to deactivate security alarm\nfunction deactivateAlarm() {\n    console.log(\"Deactivating security alarm.\");\n    event.deactivateAlarm();\n}\n\n// Function to adjust lighting based on security needs\nfunction adjustSecurityLighting(zone, state) {\n    console.log(`${state} security lighting in ${zone}.`);\n    event.adjustSecurityLighting(zone, state);\n}\n\n// Night routine to secure the house\nfunction nightSecurityRoutine() {\n    if (event.nightSecurityRoutine) {\n        controlDoorLock('front', 'lock');\n        controlDoorLock('back', 'lock');\n        adjustSecurityLighting('perimeter', 'on');\n        activateAlarm();\n    }\n}\n\n// Morning routine to prepare for the day\nfunction morningSecurityRoutine() {\n    if (event.morningSecurityRoutine) {\n        controlDoorLock('front', 'unlock');\n        controlDoorLock('back', 'unlock');\n        adjustSecurityLighting('perimeter', 'off');\n        deactivateAlarm();\n    }\n}\n\n// Emergency routine to respond to detected motion\nfunction emergencySecurityRoutine() {\n    if (event.emergencySecurityRoutine) {\n        let motion = detectMotion('living room');\n        if (motion) {\n            activateAlarm();\n            checkCameraFeed('living room');\n        }\n    }\n}",
        "accurate_docstring": "The night security routine includes locking both the front and back doors, activating perimeter security lighting, and activating the security alarm system to ensure comprehensive protection. In the morning, the routine involves unlocking the front and back doors, turning off perimeter security lighting, and deactivating the security alarm system. During emergencies, such as detecting motion in the living room, the alarm is promptly activated, and the security camera feed is checked to assess the situation.",
        "class": "security",
        "template_docstring": "WHEN in the nightRoutine, DO lock both the front and back doors; activate perimeter security lighting; activate the security alarm system to ensure comprehensive protection; WHEN in the morningRoutine, DO unlock the front and back doors; turn off perimeter security lighting; deactivate the security alarm system; DURING emergencies, such as detecting motion in the living room, DO promptly activate the alarm; check the security camera feed to assess the situation."
    },
    {
        "code": "// Function to arm the security system\nfunction armSystem() {\n    console.log(\"Arming the security system.\");\n    event.armSystem();\n}\n\n// Function to disarm the security system\nfunction disarmSystem() {\n    console.log(\"Disarming the security system.\");\n    event.disarmSystem();\n}\n\n// Function to check the status of a specific sensor\nfunction checkSensorStatus(sensor) {\n    let status = event.getSensorStatus(sensor);\n    console.log(`Status of ${sensor} sensor: ${status}`);\n    return status;\n}\n\n// Function to activate the alarm\nfunction activateAlarm() {\n    console.log(\"Activating the alarm.\");\n    event.activateAlarm();\n}\n\n// Function to check the status of multiple sensors and activate the alarm if any are triggered\nfunction comprehensiveSensorCheck() {\n    const sensors = ['door', 'window', 'motion'];\n    for (let sensor of sensors) {\n        let status = checkSensorStatus(sensor);\n        if (status === 'triggered') {\n            activateAlarm();\n            break;\n        }\n    }\n}\n\n// Night routine that arms the system and checks all sensors\nfunction nightRoutine() {\n    if(event.nightRoutine) {\n        armSystem();\n        comprehensiveSensorCheck();\n    }\n}\n\n// Away routine that arms the system and sets an alert if any sensor is triggered\nfunction awayRoutine() {\n    if(event.awayRoutine) {\n        armSystem();\n        if (comprehensiveSensorCheck()) {\n            activateAlarm();\n        }\n    }\n}",
        "accurate_docstring": "When in the nightRoutine, the system arms and checks the status of all sensors (door, window, motion). If any sensor is triggered, the alarm activates. When in the awayRoutine, the system arms and checks the status of all sensors. If any sensor is triggered, the alarm activates.",
        "class": "security",
        "template_docstring": "WHEN in the nightRoutine, DO arm the system and check the status of all sensors (door, window, motion); IF any sensor is triggered, THEN activate the alarm; WHEN in the awayRoutine, DO arm the system and check the status of all sensors; IF any sensor is triggered, THEN activate the alarm."
    },
    {
        "code": "// Function to lock the door\nfunction lockDoor() {\n    console.log(\"Locking the door.\");\n    event.lockDoor();\n}\n\n// Function to unlock the door\nfunction unlockDoor() {\n    console.log(\"Unlocking the door.\");\n    event.unlockDoor();\n}\n\n// Function to check the status of the door lock\nfunction checkLockStatus() {\n    let status = event.getLockStatus();\n    console.log(`Door lock status: ${status}`);\n    return status;\n}\n\n// Function to automatically lock the door after a certain time interval\nfunction autoLockDoor(delay) {\n    console.log(`The door will be locked in ${delay} seconds.`);\n    setTimeout(() => {\n        lockDoor();\n    }, delay * 1000);\n}\n\n// Function to unlock the door when a recognized person is detected\nfunction unlockForRecognizedPerson(person) {\n    if (event.isPersonRecognized(person)) {\n        console.log(`Recognized ${person}. Unlocking the door.`);\n        unlockDoor();\n    } else {\n        console.log(`Unrecognized person: ${person}. Door remains locked.`);\n    }\n}\n\n// Routine to lock the door every night at a specific time\nfunction nightlyLockRoutine() {\n    if(event.nightlyLockRoutine) {\n        lockDoor();\n    }\n}\n\n// Routine to unlock the door when the user arrives home\nfunction arrivalRoutine(person) {\n    if(event.arrivalRoutine) {\n        unlockForRecognizedPerson(person);\n    }\n}",
        "accurate_docstring": "When in the nightlyLockRoutine, the system locks the door. It also automatically locks the door after a specified delay. When in the arrivalRoutine, the system checks if the person is recognized; if so, it unlocks the door. Otherwise, the door remains locked. The system can also manually lock or unlock the door and check the status of the door lock.",
        "class": "security",
        "template_docstring": "WHEN in the nightlyLockRoutine, DO lock the door; it also automatically locks the door after a specified delay; WHEN in the arrivalRoutine, DO check if the person is recognized; IF so, THEN unlock the door; OTHERWISE, the door remains locked; the system can also manually lock or unlock the door and check the status of the door lock."
    },
    {
        "code": "// Function to lock or unlock doors\nfunction controlDoorLock(door, action) {\n    console.log(`${action}ing ${door} door.`);\n    event.controlDoorLock(door, action);\n}\n\n// Function to detect motion\nfunction detectMotion(zone) {\n    let motionDetected = event.detectMotion(zone);\n    console.log(`Motion detected in ${zone}: ${motionDetected}`);\n    return motionDetected;\n}\n\n// Function to monitor security cameras\nfunction monitorSecurityCameras(zone) {\n    let cameraFeed = event.getCameraFeed(zone);\n    console.log(`Monitoring security cameras in ${zone}.`);\n    return cameraFeed;\n}\n\n// Function to alert homeowner\nfunction alertHomeowner(message) {\n    console.log(`Alerting homeowner: ${message}`);\n    event.alertHomeowner(message);\n}\n\n// Function to trigger emergency protocol\nfunction triggerEmergencyProtocol() {\n    console.log('Triggering emergency protocol.');\n    event.triggerEmergencyProtocol();\n}\n\n// Routine for monitoring home security\nfunction securityRoutine() {\n    if (event.securityRoutine) {\n        controlDoorLock('front', 'lock');\n        controlDoorLock('back', 'lock');\n        if (detectMotion('living room')) {\n            alertHomeowner('Motion detected in living room.');\n            monitorSecurityCameras('living room');\n            triggerEmergencyProtocol();\n        }\n        console.log('Home security routine completed.');\n    }\n}",
        "accurate_docstring": "In securityRoutine, lock the front and back doors, detect motion in the living room, and if motion is detected, alert the homeowner, monitor the security cameras in the living room, and trigger the emergency protocol.",
        "class": "security",
        "template_docstring": "WHEN in securityRoutine, DO lock the front and back doors; detect motion in the living room; IF motion is detected, THEN alert the homeowner; monitor the security cameras in the living room; trigger the emergency protocol."
    },
    {
        "code": "// Function to lock or unlock doors\nfunction controlDoorLock(door, state) {\n    console.log(`${state} the ${door} door.`);\n    event.controlDoorLock(door, state);\n}\n\n// Function to check security camera feed\nfunction checkCameraFeed(camera) {\n    let feed = event.getCameraFeed(camera);\n    console.log(`Security camera feed from ${camera}: ${feed}`);\n    return feed;\n}\n\n// Function to detect motion\nfunction detectMotion(zone) {\n    let motion = event.detectMotion(zone);\n    console.log(`Motion detected in ${zone}: ${motion}`);\n    return motion;\n}\n\n// Function to activate security alarm\nfunction activateAlarm() {\n    console.log(\"Activating security alarm.\");\n    event.activateAlarm();\n}\n\n// Function to deactivate security alarm\nfunction deactivateAlarm() {\n    console.log(\"Deactivating security alarm.\");\n    event.deactivateAlarm();\n}\n\n// Function to adjust lighting based on security needs\nfunction adjustSecurityLighting(zone, state) {\n    console.log(`${state} security lighting in ${zone}.`);\n    event.adjustSecurityLighting(zone, state);\n}\n\n// Night routine to secure the house\nfunction nightSecurityRoutine() {\n    if (event.nightSecurityRoutine) {\n        controlDoorLock('front', 'lock');\n        controlDoorLock('back', 'lock');\n        adjustSecurityLighting('perimeter', 'on');\n        activateAlarm();\n    }\n}\n\n// Morning routine to prepare for the day\nfunction morningSecurityRoutine() {\n    if (event.morningSecurityRoutine) {\n        controlDoorLock('front', 'unlock');\n        controlDoorLock('back', 'unlock');\n        adjustSecurityLighting('perimeter', 'off');\n        deactivateAlarm();\n    }\n}\n\n// Emergency routine to respond to detected motion\nfunction emergencySecurityRoutine() {\n    if (event.emergencySecurityRoutine) {\n        let motion = detectMotion('living room');\n        if (motion) {\n            activateAlarm();\n            checkCameraFeed('living room');\n        }\n    }\n}",
        "accurate_docstring": "The night security routine includes locking both the front and back doors, activating perimeter security lighting, and activating the security alarm system to ensure comprehensive protection. In the morning, the routine involves unlocking the front and back doors, turning off perimeter security lighting, and deactivating the security alarm system. During emergencies, such as detecting motion in the living room, the alarm is promptly activated, and the security camera feed is checked to assess the situation.",
        "class": "security",
        "template_docstring": "WHEN in the night security routine, DO lock both the front and back doors; activate perimeter security lighting; activate the security alarm system to ensure comprehensive protection; WHEN in the morning, DO unlock the front and back doors; turn off perimeter security lighting; deactivate the security alarm system; DURING emergencies, such as detecting motion in the living room, DO promptly activate the alarm; check the security camera feed to assess the situation."
    },
    {
        "code": "// Function to monitor security cameras\\nfunction monitorSecurityCameras(zone) {\\n    let cameraStatus = event.getSecurityCameraStatus(zone);\\n    console.log(`Security camera status in ${zone}: ${JSON.stringify(cameraStatus)}`);\\n    return cameraStatus;\\n}\\n\\n// Function to adjust security settings\\nfunction adjustSecuritySettings(zone, setting) {\\n    console.log(`Adjusting security settings in ${zone} to ${setting}.`);\\n    event.adjustSecuritySettings(zone, setting);\\n}\\n\\n// Function to monitor door locks\\nfunction monitorDoorLocks(zone) {\\n    let lockStatus = event.getDoorLockStatus(zone);\\n    console.log(`Door lock status in ${zone}: ${JSON.stringify(lockStatus)}`);\\n    return lockStatus;\\n}\\n\\n// Function to control door locks\\nfunction controlDoorLocks(zone, action) {\\n    console.log(`${action}ing door locks in ${zone}.`);\\n    event.controlDoorLocks(zone, action);\\n}\\n\\n// Function to notify security team\\nfunction notifySecurityTeam(message) {\\n    console.log(`Notifying security team: ${message}`);\\n    event.notifySecurityTeam(message);\\n}\\n\\n// Morning routine for security\\nfunction morningSecurityRoutine() {\\n    if (event.morningRoutine) {\\n        let cameraStatus = monitorSecurityCameras('zone1');\\n        if (!cameraStatus.operational) {\\n            adjustSecuritySettings('zone1', 'restart cameras');\\n        }\\n        let lockStatus = monitorDoorLocks('zone1');\\n        if (!lockStatus.locked) {\\n            controlDoorLocks('zone1', 'lock');\\n        }\\n        notifySecurityTeam('Morning security routine completed.');\\n    }\\n}\\n\\n// Afternoon routine for security\\nfunction afternoonSecurityRoutine() {\\n    if (event.afternoonRoutine) {\\n        let cameraStatus = monitorSecurityCameras('zone2');\\n        if (!cameraStatus.operational) {\\n            adjustSecuritySettings('zone2', 'restart cameras');\\n        }\\n        let lockStatus = monitorDoorLocks('zone2');\\n        if (!lockStatus.locked) {\\n            controlDoorLocks('zone2', 'lock');\\n        }\\n        notifySecurityTeam('Afternoon security routine completed.');\\n    }\\n}\\n\\n// Evening routine for security\\nfunction eveningSecurityRoutine() {\\n    if (event.eveningRoutine) {\\n        let cameraStatus = monitorSecurityCameras('zone3');\\n        if (!cameraStatus.operational) {\\n            adjustSecuritySettings('zone3', 'restart cameras');\\n        }\\n        let lockStatus = monitorDoorLocks('zone3');\\n        if (!lockStatus.locked) {\\n            controlDoorLocks('zone3', 'lock');\\n        }\\n        notifySecurityTeam('Evening security routine completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningSecurityRoutine, monitor the security cameras in zone1. If the cameras are not operational, adjust the security settings to restart the cameras. Monitor the door locks in zone1. If the doors are not locked, control the door locks to lock them. Notify the security team that the morning security routine is completed. In the afternoonSecurityRoutine, monitor the security cameras in zone2. If the cameras are not operational, adjust the security settings to restart the cameras. Monitor the door locks in zone2. If the doors are not locked, control the door locks to lock them. Notify the security team that the afternoon security routine is completed. In the eveningSecurityRoutine, monitor the security cameras in zone3. If the cameras are not operational, adjust the security settings to restart the cameras. Monitor the door locks in zone3. If the doors are not locked, control the door locks to lock them. Notify the security team that the evening security routine is completed.",
        "class": "security",
        "template_docstring": "WHEN in the morningSecurityRoutine, DO monitor the security cameras in zone1; IF the cameras are not operational, THEN adjust the security settings to restart the cameras; monitor the door locks in zone1; IF the doors are not locked, THEN control the door locks to lock them; notify the security team that the morning security routine is completed; WHEN in the afternoonSecurityRoutine, DO monitor the security cameras in zone2; IF the cameras are not operational, THEN adjust the security settings to restart the cameras; monitor the door locks in zone2; IF the doors are not locked, THEN control the door locks to lock them; notify the security team that the afternoon security routine is completed; WHEN in the eveningSecurityRoutine, DO monitor the security cameras in zone3; IF the cameras are not operational, THEN adjust the security settings to restart the cameras; monitor the door locks in zone3; IF the doors are not locked, THEN control the door locks to lock them; notify the security team that the evening security routine is completed."
    }
]