[
    {
        "code": "// Function to turn on the TV\nfunction turnOnTV() {\n    console.log(\"Turning on the TV.\");\n    event.turnOnTV();\n}\n\n// Function to turn off the TV\nfunction turnOffTV() {\n    console.log(\"Turning off the TV.\");\n    event.turnOffTV();\n}\n\n// Function to set the speaker volume\nfunction setSpeakerVolume(volume) {\n    console.log(`Setting speaker volume to ${volume}.`);\n    event.setSpeakerVolume(volume);\n}\n\n// Function to adjust lighting for ambiance\nfunction setAmbianceLighting(scene) {\n    console.log(`Setting ambiance lighting for ${scene} scene.`);\n    event.setAmbianceLighting(scene);\n}\n\n// Function to play a specific movie\nfunction playMovie(movie) {\n    console.log(`Playing movie: ${movie}.`);\n    event.playMovie(movie);\n}\n\n// Movie night routine to set up the perfect viewing experience\nfunction movieNightRoutine(movie) {\n    if (event.movieNightRoutine) {\n        turnOnTV();\n        setSpeakerVolume(30);\n        setAmbianceLighting('movie');\n        playMovie(movie);\n    }\n}\n\n// Party mode routine to set up entertainment for guests\nfunction partyModeRoutine() {\n    if (event.partyModeRoutine) {\n        turnOnTV();\n        setSpeakerVolume(50);\n        setAmbianceLighting('party');\n        event.playMusic('party playlist');\n    }\n}\n\n// Relaxation routine to set up a calm environment\nfunction relaxationRoutine() {\n    if (event.relaxationRoutine) {\n        turnOffTV();\n        setSpeakerVolume(20);\n        setAmbianceLighting('relaxation');\n        event.playMusic('relaxation playlist');\n    }\n}",
        "accurate_docstring": "When in the movieNightRoutine, the homeEntertainment turns on the TV, sets the speaker volume to 30, adjusts the ambiance lighting to a 'movie' scene, and plays the specified movie. When in the partyModeRoutine, the homeEntertainment turns on the TV, sets the speaker volume to 50, adjusts the ambiance lighting to a 'party' scene, and plays the 'party playlist' music. When in the relaxationRoutine, the homeEntertainment turns off the TV, sets the speaker volume to 20, adjusts the ambiance lighting to a 'relaxation' scene, and plays the 'relaxation playlist' music.",
        "class": "home entertainment",
        "template_docstring": "WHEN in the movieNightRoutine, DO turn on the TV; set the speaker volume to 30; adjust the ambiance lighting to a 'movie' scene; play the specified movie; WHEN in the partyModeRoutine, DO turn on the TV; set the speaker volume to 50; adjust the ambiance lighting to a 'party' scene; play the 'party playlist' music; WHEN in the relaxationRoutine, DO turn off the TV; set the speaker volume to 20; adjust the ambiance lighting to a 'relaxation' scene; play the 'relaxation playlist' music."
    },
    {
        "code": "// Function to control smart lights\\nfunction controlSmartLights(room, setting) {\\n    console.log(`Setting smart lights in ${room} to ${setting}.`);\\n    event.controlSmartLights(room, setting);\\n}\\n\\n// Function to control smart speakers\\nfunction controlSmartSpeakers(room, setting) {\\n    console.log(`Setting smart speakers in ${room} to ${setting}.`);\\n    event.controlSmartSpeakers(room, setting);\\n}\\n\\n// Function to notify family\\nfunction notifyFamily(message) {\\n    console.log(`Notifying family: ${message}`);\\n    event.notifyFamily(message);\\n}\\n\\n// Morning routine for home ambiance\\nfunction morningAmbianceRoutine() {\\n    if (event.morningRoutine) {\\n        controlSmartLights('livingRoom', 'soft white');\\n        controlSmartSpeakers('livingRoom', 'play morning playlist');\\n        notifyFamily('Morning ambiance set.');\\n    }\\n}\\n\\n// Afternoon routine for home ambiance\\nfunction afternoonAmbianceRoutine() {\\n    if (event.afternoonRoutine) {\\n        controlSmartLights('homeOffice', 'bright white');\\n        controlSmartSpeakers('homeOffice', 'play focus playlist');\\n        notifyFamily('Afternoon ambiance set.');\\n    }\\n}\\n\\n// Evening routine for home ambiance\\nfunction eveningAmbianceRoutine() {\\n    if (event.eveningRoutine) {\\n        controlSmartLights('bedroom', 'warm white');\\n        controlSmartSpeakers('bedroom', 'play relaxing sounds');\\n        notifyFamily('Evening ambiance set.');\\n    }\\n}",
        "accurate_docstring": "When in the morningAmbianceRoutine, set the smart lights in the living room to soft white and the smart speakers to play the morning playlist. Notify the family that the morning ambiance is set. When in the afternoonAmbianceRoutine, set the smart lights in the home office to bright white and the smart speakers to play the focus playlist. Notify the family that the afternoon ambiance is set. When in the eveningAmbianceRoutine, set the smart lights in the bedroom to warm white and the smart speakers to play relaxing sounds. Notify the family that the evening ambiance is set.",
        "class": "home entertainment",
        "template_docstring": "WHEN in the morningAmbianceRoutine, DO set the smart lights in the living room to soft white; set the smart speakers to play the morning playlist; notify the family that the morning ambiance is set; WHEN in the afternoonAmbianceRoutine, DO set the smart lights in the home office to bright white; set the smart speakers to play the focus playlist; notify the family that the afternoon ambiance is set; WHEN in the eveningAmbianceRoutine, DO set the smart lights in the bedroom to warm white; set the smart speakers to play relaxing sounds; notify the family that the evening ambiance is set."
    },
    {
        "code": "// Function to control smart blinds\\nfunction controlSmartBlinds(room, setting) {\\n    console.log(`Setting smart blinds in ${room} to ${setting}.`);\\n    event.controlSmartBlinds(room, setting);\\n}\\n\\n// Function to control smart thermostat\\nfunction controlSmartThermostat(room, temperature) {\\n    console.log(`Setting smart thermostat in ${room} to ${temperature} degrees.`);\\n    event.controlSmartThermostat(room, temperature);\\n}\\n\\n// Function to notify household\\nfunction notifyHousehold(message) {\\n    console.log(`Notifying household: ${message}`);\\n    event.notifyHousehold(message);\\n}\\n\\n// Morning routine for home climate control\\nfunction morningClimateRoutine() {\\n    if (event.morningRoutine) {\\n        controlSmartBlinds('livingRoom', 'open');\\n        controlSmartThermostat('livingRoom', 22);\\n        notifyHousehold('Morning climate control set.');\\n    }\\n}\\n\\n// Afternoon routine for home climate control\\nfunction afternoonClimateRoutine() {\\n    if (event.afternoonRoutine) {\\n        controlSmartBlinds('homeOffice', 'closed');\\n        controlSmartThermostat('homeOffice', 24);\\n        notifyHousehold('Afternoon climate control set.');\\n    }\\n}\\n\\n// Evening routine for home climate control\\nfunction eveningClimateRoutine() {\\n    if (event.eveningRoutine) {\\n        controlSmartBlinds('bedroom', 'half-open');\\n        controlSmartThermostat('bedroom', 20);\\n        notifyHousehold('Evening climate control set.');\\n    }\\n}",
        "accurate_docstring": "When in the morningClimateRoutine, set the smart blinds in the living room to open and the smart thermostat to 22 degrees. Notify the household that the morning climate control is set. When in the afternoonClimateRoutine, set the smart blinds in the home office to closed and the smart thermostat to 24 degrees. Notify the household that the afternoon climate control is set. When in the eveningClimateRoutine, set the smart blinds in the bedroom to half-open and the smart thermostat to 20 degrees. Notify the household that the evening climate control is set.",
        "class": "home entertainment",
        "template_docstring": "WHEN in the morningClimateRoutine, DO set the smart blinds in the living room to open; set the smart thermostat to 22 degrees; notify the household that the morning climate control is set; WHEN in the afternoonClimateRoutine, DO set the smart blinds in the home office to closed; set the smart thermostat to 24 degrees; notify the household that the afternoon climate control is set; WHEN in the eveningClimateRoutine, DO set the smart blinds in the bedroom to half-open; set the smart thermostat to 20 degrees; notify the household that the evening climate control is set."
    },
    {
        "code": "// Function to monitor TV status\\nfunction monitorTVStatus(tvId) {\\n    let status = event.getTVStatus(tvId);\\n    console.log(`TV ${tvId} status: ${JSON.stringify(status)}`);\\n    return status;\\n}\\n\\n// Function to adjust TV settings\\nfunction adjustTVSettings(tvId, setting) {\\n    console.log(`Adjusting TV ${tvId} settings to ${setting}.`);\\n    event.adjustTVSettings(tvId, setting);\\n}\\n\\n// Function to monitor sound system status\\nfunction monitorSoundSystemStatus(systemId) {\\n    let status = event.getSoundSystemStatus(systemId);\\n    console.log(`Sound system ${systemId} status: ${JSON.stringify(status)}`);\\n    return status;\\n}\\n\\n// Function to adjust sound system settings\\nfunction adjustSoundSystemSettings(systemId, setting) {\\n    console.log(`Adjusting sound system ${systemId} settings to ${setting}.`);\\n    event.adjustSoundSystemSettings(systemId, setting);\\n}\\n\\n// Function to monitor lighting\\nfunction monitorLighting(zone) {\\n    let lightLevels = event.getLightLevels(zone);\\n    console.log(`Light levels in ${zone}: ${lightLevels} lux`);\\n    return lightLevels;\\n}\\n\\n// Function to adjust lighting\\nfunction adjustLighting(zone, setting) {\\n    console.log(`Adjusting lighting in ${zone} to ${setting}.`);\\n    event.adjustLighting(zone, setting);\\n}\\n\\n// Function to notify user\\nfunction notifyUser(message) {\\n    console.log(`Notifying user: ${message}`);\\n    event.notifyUser(message);\\n}\\n\\n// Morning routine for home entertainment\\nfunction morningHomeEntertainmentRoutine() {\\n    if (event.morningRoutine) {\\n        let tvStatus = monitorTVStatus('tv1');\\n        if (!tvStatus.on) {\\n            adjustTVSettings('tv1', 'turn on');\\n        }\\n        let soundSystemStatus = monitorSoundSystemStatus('system1');\\n        if (!soundSystemStatus.on) {\\n            adjustSoundSystemSettings('system1', 'turn on');\\n        }\\n        let lightLevels = monitorLighting('livingRoom');\\n        if (lightLevels < 300) {\\n            adjustLighting('livingRoom', 'increase');\\n        }\\n        notifyUser('Morning home entertainment routine completed.');\\n    }\\n}\\n\\n// Afternoon routine for home entertainment\\nfunction afternoonHomeEntertainmentRoutine() {\\n    if (event.afternoonRoutine) {\\n        let tvStatus = monitorTVStatus('tv2');\\n        if (!tvStatus.on) {\\n            adjustTVSettings('tv2', 'turn on');\\n        }\\n        let soundSystemStatus = monitorSoundSystemStatus('system2');\\n        if (!soundSystemStatus.on) {\\n            adjustSoundSystemSettings('system2', 'turn on');\\n        }\\n        let lightLevels = monitorLighting('mediaRoom');\\n        if (lightLevels > 700) {\\n            adjustLighting('mediaRoom', 'decrease');\\n        }\\n        notifyUser('Afternoon home entertainment routine completed.');\\n    }\\n}\\n\\n// Evening routine for home entertainment\\nfunction eveningHomeEntertainmentRoutine() {\\n    if (event.eveningRoutine) {\\n        let tvStatus = monitorTVStatus('tv3');\\n        if (!tvStatus.on) {\\n            adjustTVSettings('tv3', 'turn on');\\n        }\\n        let soundSystemStatus = monitorSoundSystemStatus('system3');\\n        if (!soundSystemStatus.on) {\\n            adjustSoundSystemSettings('system3', 'turn on');\\n        }\\n        let lightLevels = monitorLighting('bedroom');\\n        if (lightLevels < 200) {\\n            adjustLighting('bedroom', 'increase');\\n        }\\n        notifyUser('Evening home entertainment routine completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningHomeEntertainmentRoutine, monitor the TV status of tv1. If the TV is off, adjust the TV settings to turn it on. Monitor the sound system status of system1. If the sound system is off, adjust the sound system settings to turn it on. Monitor the lighting levels in the livingRoom. If the light levels are below 300 lux, increase the lighting. Notify the user that the morning home entertainment routine is completed. In the afternoonHomeEntertainmentRoutine, monitor the TV status of tv2. If the TV is off, adjust the TV settings to turn it on. Monitor the sound system status of system2. If the sound system is off, adjust the sound system settings to turn it on. Monitor the lighting levels in the mediaRoom. If the light levels are above 700 lux, decrease the lighting. Notify the user that the afternoon home entertainment routine is completed. In the eveningHomeEntertainmentRoutine, monitor the TV status of tv3. If the TV is off, adjust the TV settings to turn it on. Monitor the sound system status of system3. If the sound system is off, adjust the sound system settings to turn it on. Monitor the lighting levels in the bedroom. If the light levels are below 200 lux, increase the lighting. Notify the user that the evening home entertainment routine is completed.",
        "class": "home entertainment",
        "template_docstring": "WHEN in the morningHomeEntertainmentRoutine, DO monitor the TV status of tv1; IF the TV is off, THEN adjust the TV settings to turn it on; monitor the sound system status of system1; IF the sound system is off, THEN adjust the sound system settings to turn it on; monitor the lighting levels in the livingRoom; IF the light levels are below 300 lux, THEN increase the lighting; notify the user that the morning home entertainment routine is completed; WHEN in the afternoonHomeEntertainmentRoutine, DO monitor the TV status of tv2; IF the TV is off, THEN adjust the TV settings to turn it on; monitor the sound system status of system2; IF the sound system is off, THEN adjust the sound system settings to turn it on; monitor the lighting levels in the mediaRoom; IF the light levels are above 700 lux, THEN decrease the lighting; notify the user that the afternoon home entertainment routine is completed; WHEN in the eveningHomeEntertainmentRoutine, DO monitor the TV status of tv3; IF the TV is off, THEN adjust the TV settings to turn it on; monitor the sound system status of system3; IF the sound system is off, THEN adjust the sound system settings to turn it on; monitor the lighting levels in the bedroom; IF the light levels are below 200 lux, THEN increase the lighting; notify the user that the evening home entertainment routine is completed."
    },
    {
        "code": "// Function to monitor home theater status\\nfunction monitorHomeTheaterStatus(theaterId) {\\n    let status = event.getHomeTheaterStatus(theaterId);\\n    console.log(`Home theater ${theaterId} status: ${JSON.stringify(status)}`);\\n    return status;\\n}\\n\\n// Function to adjust projector settings\\nfunction adjustProjectorSettings(theaterId, setting) {\\n    console.log(`Adjusting projector settings for home theater ${theaterId} to ${setting}.`);\\n    event.adjustProjectorSettings(theaterId, setting);\\n}\\n\\n// Function to adjust speaker volume\\nfunction adjustSpeakerVolume(theaterId, volume) {\\n    console.log(`Adjusting speaker volume for home theater ${theaterId} to ${volume}.`);\\n    event.adjustSpeakerVolume(theaterId, volume);\\n}\\n\\n// Function to monitor lighting levels\\nfunction monitorLightingLevels(theaterId) {\\n    let lighting = event.getLightingLevels(theaterId);\\n    console.log(`Lighting levels in home theater ${theaterId}: ${lighting} lux`);\\n    return lighting;\\n}\\n\\n// Function to adjust lighting\\nfunction adjustLighting(theaterId, setting) {\\n    console.log(`Adjusting lighting in home theater ${theaterId} to ${setting} lux.`);\\n    event.adjustLighting(theaterId, setting);\\n}\\n\\n// Function to monitor seating arrangement\\nfunction monitorSeatingArrangement(theaterId) {\\n    let arrangement = event.getSeatingArrangement(theaterId);\\n    console.log(`Seating arrangement for home theater ${theaterId}: ${JSON.stringify(arrangement)}`);\\n    return arrangement;\\n}\\n\\n// Function to adjust seating arrangement\\nfunction adjustSeatingArrangement(theaterId, setting) {\\n    console.log(`Adjusting seating arrangement for home theater ${theaterId} to ${setting}.`);\\n    event.adjustSeatingArrangement(theaterId, setting);\\n}\\n\\n// Function to notify user\\nfunction notifyUser(message) {\\n    console.log(`Notifying user: ${message}`);\\n    event.notifyUser(message);\\n}\\n\\n// Morning routine for home entertainment\\nfunction morningHomeEntertainmentRoutine() {\\n    if (event.morningRoutine) {\\n        let theaterStatus = monitorHomeTheaterStatus('theater1');\\n        if (!theaterStatus.ready) {\\n            adjustProjectorSettings('theater1', 'turn on');\\n            adjustSpeakerVolume('theater1', 50);\\n        }\\n        let lighting = monitorLightingLevels('theater1');\\n        if (lighting < 300) {\\n            adjustLighting('theater1', 'increase');\\n        }\\n        let arrangement = monitorSeatingArrangement('theater1');\\n        if (arrangement.notOptimal) {\\n            adjustSeatingArrangement('theater1', 'optimal');\\n        }\\n        notifyUser('Morning home entertainment routine completed.');\\n    }\\n}\\n\\n// Afternoon routine for home entertainment\\nfunction afternoonHomeEntertainmentRoutine() {\\n    if (event.afternoonRoutine) {\\n        let theaterStatus = monitorHomeTheaterStatus('theater2');\\n        if (!theaterStatus.ready) {\\n            adjustProjectorSettings('theater2', 'turn on');\\n            adjustSpeakerVolume('theater2', 60);\\n        }\\n        let lighting = monitorLightingLevels('theater2');\\n        if (lighting > 700) {\\n            adjustLighting('theater2', 'decrease');\\n        }\\n        let arrangement = monitorSeatingArrangement('theater2');\\n        if (arrangement.notOptimal) {\\n            adjustSeatingArrangement('theater2', 'optimal');\\n        }\\n        notifyUser('Afternoon home entertainment routine completed.');\\n    }\\n}\\n\\n// Evening routine for home entertainment\\nfunction eveningHomeEntertainmentRoutine() {\\n    if (event.eveningRoutine) {\\n        let theaterStatus = monitorHomeTheaterStatus('theater3');\\n        if (!theaterStatus.ready) {\\n            adjustProjectorSettings('theater3', 'turn on');\\n            adjustSpeakerVolume('theater3', 70);\\n        }\\n        let lighting = monitorLightingLevels('theater3');\\n        if (lighting < 200) {\\n            adjustLighting('theater3', 'increase');\\n        }\\n        let arrangement = monitorSeatingArrangement('theater3');\\n        if (arrangement.notOptimal) {\\n            adjustSeatingArrangement('theater3', 'optimal');\\n        }\\n        notifyUser('Evening home entertainment routine completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningHomeEntertainmentRoutine, monitor the home theater status, projector settings, speaker volume, lighting levels, and seating arrangement for theater1. If the theater status is not ready, turn on the projector and set the speaker volume to 50. If the lighting is below 300 lux, increase it. If the seating arrangement is not optimal, adjust it to optimal. Notify the user that the morning home entertainment routine is completed. In the afternoonHomeEntertainmentRoutine, monitor the home theater status, projector settings, speaker volume, lighting levels, and seating arrangement for theater2. If the theater status is not ready, turn on the projector and set the speaker volume to 60. If the lighting is above 700 lux, decrease it. If the seating arrangement is not optimal, adjust it to optimal. Notify the user that the afternoon home entertainment routine is completed. In the eveningHomeEntertainmentRoutine, monitor the home theater status, projector settings, speaker volume, lighting levels, and seating arrangement for theater3. If the theater status is not ready, turn on the projector and set the speaker volume to 70. If the lighting is below 200 lux, increase it. If the seating arrangement is not optimal, adjust it to optimal. Notify the user that the evening home entertainment routine is completed.",
        "class": "home entertainment",
        "template_docstring": "WHEN in the morningHomeEntertainmentRoutine, DO monitor the home theater status, projector settings, speaker volume, lighting levels, and seating arrangement for theater1; IF the theater status is not ready, THEN turn on the projector and set the speaker volume to 50; IF the lighting is below 300 lux, THEN increase it; IF the seating arrangement is not optimal, THEN adjust it to optimal; notify the user that the morning home entertainment routine is completed; WHEN in the afternoonHomeEntertainmentRoutine, DO monitor the home theater status, projector settings, speaker volume, lighting levels, and seating arrangement for theater2; IF the theater status is not ready, THEN turn on the projector and set the speaker volume to 60; IF the lighting is above 700 lux, THEN decrease it; IF the seating arrangement is not optimal, THEN adjust it to optimal; notify the user that the afternoon home entertainment routine is completed; WHEN in the eveningHomeEntertainmentRoutine, DO monitor the home theater status, projector settings, speaker volume, lighting levels, and seating arrangement for theater3; IF the theater status is not ready, THEN turn on the projector and set the speaker volume to 70; IF the lighting is below 200 lux, THEN increase it; IF the seating arrangement is not optimal, THEN adjust it to optimal; notify the user that the evening home entertainment routine is completed."
    },
    {
        "code": "function automaticFeeder() {\n    console.log(\"Activating automatic feeder.\");\n    event.feedPet();\n\n    function automaticWatering() {\n        console.log(\"Activating automatic watering.\");\n        event.waterPet();\n    }\n\n    function activityMonitoring() {\n        setInterval(() => {\n            const activityLevel = getActivityLevel();\n            event.sendmessage(`Pet activity level: ${activityLevel}`);\n            if (activityLevel < 3) {\n                console.log(\"Pet needs more activity.\");\n            }\n        }, 60000);\n    }\n\n    function adjustEnvironment() {\n        const temperature = getTemperature();\n        const humidity = getHumidity();\n        console.log(`Temperature: ${temperature}°C, Humidity: ${humidity}%`);\n        if (temperature > 25) {\n            console.log(\"Turning on air conditioning.\");\n            event.turnOnAirConditioning();\n        }\n        if (humidity < 40) {\n            console.log(\"Turning on humidifier.\");\n            event.turnOnHumidifier();\n        }\n    }\n\n    function remoteInteraction() {\n        console.log(\"Remote interaction activated.\");\n        event.activateRemoteControl();\n    }\n\n    eventBus.on('startPetCare', () => {\n        activityMonitoring();\n        adjustEnvironment();\n    });\n    eventBus.on('remoteInteraction', () => {\n        remoteInteraction();\n    });\n    eventBus.on('NeedFeed', () => {\n        automaticFeeder();\n    });\n    eventBus.on('NeedWater', () => {\n        automaticWatering();\n    });\n\n    function setupPetCareScene() {\n        eventBus.emit('startPetCare');\n        eventBus.emit('NeedFeed');\n        eventBus.emit('NeedWater');\n        eventBus.emit('remoteInteraction');\n    }\n\n    setupPetCareScene();\n}",
        "accurate_docstring": "Start office mode: When the user enters the home office, automatically activate office mode by turning on work lights, starting the computer and monitor, and adjusting the room temperature.Real-time environment monitoring: Use sensors to monitor indoor light, temperature, and air quality, and automatically adjust lighting, air conditioning, and the air purifier as needed.Focused work time: Play soft background music, start the Pomodoro timer to remind the user to work and take breaks.Video conference mode: When a video conference begins, automatically adjust the camera angle, optimize background lighting, and turn off background music.Break reminders: Based on work duration and health recommendations, regularly remind the user to stand up, move around, and do eye exercises.End office mode: When work ends, automatically turn off work equipment, adjust lighting to a comfortable mode, and play relaxing music.",
        "class": "home entertainment",
        "template_docstring": "Start office mode: WHEN the user enters the home office, DO automatically activate office mode by turning on work lights, starting the computer and monitor, and adjusting the room temperature. Real-time environment monitoring: Use sensors to monitor indoor light, temperature, and air quality, and automatically adjust lighting, air conditioning, and the air purifier as needed. Focused work time: Play soft background music; start the Pomodoro timer to remind the user to work and take breaks. Video conference mode: WHEN a video conference begins, DO automatically adjust the camera angle, optimize background lighting, and turn off background music. Break reminders: Based on work duration and health recommendations, regularly remind the user to stand up, move around, and do eye exercises. End office mode: WHEN work ends, DO automatically turn off work equipment, adjust lighting to a comfortable mode, and play relaxing music."
    },
    {
        "code": "// Function to monitor noise levels\\nfunction monitorNoiseLevels(zone) {\\n    let noiseLevels = event.getNoiseLevels(zone);\\n    console.log(`Noise levels in ${zone}: ${noiseLevels} dB`);\\n    return noiseLevels;\\n}\\n\\n// Function to monitor light levels\\nfunction monitorLightLevels(zone) {\\n    let lightLevels = event.getLightLevels(zone);\\n    console.log(`Light levels in ${zone}: ${lightLevels} lux`);\\n    return lightLevels;\\n}\\n\\n// Function to adjust noise-canceling system\\nfunction adjustNoiseCancelling(zone, setting) {\\n    console.log(`Adjusting noise-canceling system in ${zone} to ${setting}.`);\\n    event.adjustNoiseCancelling(zone, setting);\\n}\\n\\n// Function to adjust lighting system\\nfunction adjustLighting(zone, setting) {\\n    console.log(`Adjusting lighting in ${zone} to ${setting}.`);\\n    event.adjustLighting(zone, setting);\\n}\\n\\n// Function to notify library staff\\nfunction notifyLibraryStaff(message) {\\n    console.log(`Notifying library staff: ${message}`);\\n    event.notifyLibraryStaff(message);\\n}\\n\\n// Morning routine for library environment\\nfunction morningLibraryRoutine() {\\n    if (event.morningRoutine) {\\n        let noiseLevels = monitorNoiseLevels('zone1');\\n        if (noiseLevels > 40) {\\n            adjustNoiseCancelling('zone1', 'increase');\\n        }\\n        let lightLevels = monitorLightLevels('zone1');\\n        if (lightLevels < 300) {\\n            adjustLighting('zone1', 'increase');\\n        }\\n        notifyLibraryStaff('Morning library environment check completed.');\\n    }\\n}\\n\\n// Afternoon routine for library environment\\nfunction afternoonLibraryRoutine() {\\n    if (event.afternoonRoutine) {\\n        let noiseLevels = monitorNoiseLevels('zone2');\\n        if (noiseLevels > 35) {\\n            adjustNoiseCancelling('zone2', 'increase');\\n        }\\n        let lightLevels = monitorLightLevels('zone2');\\n        if (lightLevels > 700) {\\n            adjustLighting('zone2', 'decrease');\\n        }\\n        notifyLibraryStaff('Afternoon library environment check completed.');\\n    }\\n}\\n\\n// Evening routine for library environment\\nfunction eveningLibraryRoutine() {\\n    if (event.eveningRoutine) {\\n        let noiseLevels = monitorNoiseLevels('zone3');\\n        if (noiseLevels > 45) {\\n            adjustNoiseCancelling('zone3', 'increase');\\n        }\\n        let lightLevels = monitorLightLevels('zone3');\\n        if (lightLevels < 200) {\\n             adjustLighting('zone3', 'increase');\\n         }\\n         notifyLibraryStaff('Evening library environment check completed.');\\n     }\\n}",
        "accurate_docstring": "When in the morningLibraryRoutine, monitor the noise levels in zone1. If the noise levels are greater than 40 dB, adjust the noise-canceling system to increase. Monitor the light levels in zone1. If the light levels are less than 300 lux, adjust the lighting to increase. Notify the library staff that the morning library environment check is completed. When in the afternoonLibraryRoutine, monitor the noise levels in zone2. If the noise levels are greater than 35 dB, adjust the noise-canceling system to increase. Monitor the light levels in zone2. If the light levels are greater than 700 lux, adjust the lighting to decrease. Notify the library staff that the afternoon library environment check is completed. When in the eveningLibraryRoutine, monitor the noise levels in zone3. If the noise levels are greater than 45 dB, adjust the noise-canceling system to increase. Monitor the light levels in zone3. If the light levels are less than 200 lux, adjust the lighting to increase. Notify the library staff that the evening library environment check is completed.",
        "class": "home entertainment",
        "template_docstring": "WHEN in the morningLibraryRoutine, DO monitor the noise levels in zone1; IF the noise levels are greater than 40 dB, THEN adjust the noise-canceling system to increase; monitor the light levels in zone1; IF the light levels are less than 300 lux, THEN adjust the lighting to increase; notify the library staff that the morning library environment check is completed; WHEN in the afternoonLibraryRoutine, DO monitor the noise levels in zone2; IF the noise levels are greater than 35 dB, THEN adjust the noise-canceling system to increase; monitor the light levels in zone2; IF the light levels are greater than 700 lux, THEN adjust the lighting to decrease; notify the library staff that the afternoon library environment check is completed; WHEN in the eveningLibraryRoutine, DO monitor the noise levels in zone3; IF the noise levels are greater than 45 dB, THEN adjust the noise-canceling system to increase; monitor the light levels in zone3; IF the light levels are less than 200 lux, THEN adjust the lighting to increase; notify the library staff that the evening library environment check is completed."
    }
]