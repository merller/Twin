[
    {
        "code": "// Function to monitor soil moisture\nfunction monitorSoilMoisture(field) {\n    let moistureLevel = event.getSoilMoisture(field);\n    console.log(`Soil moisture in ${field}: ${moistureLevel}%`);\n    return moistureLevel;\n}\n\n// Function to control irrigation system\nfunction controlIrrigation(field, state) {\n    console.log(`${state} irrigation in ${field}.`);\n    event.controlIrrigation(field, state);\n}\n\n// Function to track livestock\nfunction trackLivestock(livestockId) {\n    let location = event.getLivestockLocation(livestockId);\n    console.log(`Location of livestock ${livestockId}: ${location}`);\n    return location;\n}\n\n// Function to send farm alert\nfunction sendFarmAlert(message) {\n    console.log(`Sending farm alert: ${message}`);\n    event.sendFarmAlert(message);\n}\n\n// Morning routine for farm management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        monitorSoilMoisture('north field');\n        controlIrrigation('north field', 'on');\n        trackLivestock('cow1');\n    }\n}\n\n// Evening routine for farm management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        monitorSoilMoisture('south field');\n        controlIrrigation('south field', 'off');\n        sendFarmAlert('Farm management systems shutting down for the night.');\n    }\n}",
        "accurate_docstring": "When in morningRoutine, monitor soil moisture in the north field, turn on irrigation in the north field, and track the location of livestock cow1. When in eveningRoutine, monitor soil moisture in the south field, turn off irrigation in the south field, and send a farm alert indicating that farm management systems are shutting down for the night.",
        "class": "garden",
        "template_docstring": "WHEN in morningRoutine, DO monitor soil moisture in the north field; turn on irrigation in the north field; track the location of livestock cow1; WHEN in eveningRoutine, DO monitor soil moisture in the south field; turn off irrigation in the south field; send a farm alert indicating that farm management systems are shutting down for the night."
    },
    {
        "code": "// Function to check soil moisture level\nfunction checkSoilMoisture(zone) {\n    let moistureLevel = event.getSoilMoisture(zone);\n    console.log(`Soil moisture level in ${zone}: ${moistureLevel}%`);\n    return moistureLevel;\n}\n\n// Function to control irrigation in a specific zone\nfunction controlIrrigation(zone, state) {\n    console.log(`${state} irrigation in ${zone}.`);\n    event.controlIrrigation(zone, state);\n}\n\n// Function to adjust irrigation based on weather forecast\nfunction adjustIrrigationForWeather(forecast) {\n    if (forecast === 'rain') {\n        console.log(\"Rain forecasted. Turning off irrigation.\");\n        event.turnOffAllIrrigation();\n    } else {\n        console.log(\"No rain forecasted. Maintaining scheduled irrigation.\");\n        event.maintainScheduledIrrigation();\n    }\n}\n\n// Function to control garden lighting\nfunction controlGardenLighting(state, colorTemperature) {\n    console.log(`Turning garden lights ${state} with color temperature ${colorTemperature}K.`);\n    event.controlGardenLighting(state, colorTemperature);\n}\n\n// Function to manage garden care based on soil moisture levels\nfunction manageGardenCare() {\n    let zones = ['flower bed', 'vegetable patch', 'herb garden'];\n    zones.forEach(zone => {\n        let moistureLevel = checkSoilMoisture(zone);\n        if (moistureLevel < 30) {\n            controlIrrigation(zone, 'on');\n        } else {\n            controlIrrigation(zone, 'off');\n        }\n    });\n}\n\n// Morning routine to prepare garden for the day\nfunction morningGardenRoutine() {\n    if (event.morningGardenRoutine) {\n        manageGardenCare();\n        adjustIrrigationForWeather(event.getWeatherForecast());\n        controlGardenLighting('on', 5000);\n    }\n}\n\n// Evening routine to adjust garden lighting and irrigation\nfunction eveningGardenRoutine() {\n    if (event.eveningGardenRoutine) {\n        manageGardenCare();\n        controlGardenLighting('off', 0);\n        controlIrrigation('herb garden', 'on');\n    }\n}",
        "accurate_docstring": "When in morningGardenRoutine, check soil moisture levels in the flower bed, vegetable patch, and herb garden, turning on irrigation if moisture is below 30%, adjust irrigation based on weather forecast, and turn on garden lights with a color temperature of 5000K. When in eveningGardenRoutine, check soil moisture levels in the same zones, turn off garden lights, and turn on irrigation in the herb garden.",
        "class": "garden",
        "template_docstring": "WHEN in morningGardenRoutine, DO check soil moisture levels in the flower bed, vegetable patch, and herb garden; turn on irrigation if moisture is below 30%; adjust irrigation based on weather forecast; turn on garden lights with a color temperature of 5000K; WHEN in eveningGardenRoutine, DO check soil moisture levels in the same zones; turn off garden lights; turn on irrigation in the herb garden."
    },
    {
        "code": "// Function to start watering the garden\nfunction startWatering() {\n    console.log(\"Starting watering.\");\n    event.startWatering();\n}\n\n// Function to stop watering the garden\nfunction stopWatering() {\n    console.log(\"Stopping watering.\");\n    event.stopWatering();\n}\n\n// Function to check soil moisture level\nfunction checkSoilMoisture() {\n    let moistureLevel = event.getSoilMoisture();\n    console.log(`Soil moisture level: ${moistureLevel}%`);\n    return moistureLevel;\n}\n\n// Function to set a watering schedule\nfunction setWateringSchedule(time) {\n    console.log(`Setting watering schedule to ${time}.`);\n    event.setWateringSchedule(time);\n}\n\n// Function to adjust watering based on soil moisture\nfunction adjustWatering(moistureLevel) {\n    if (moistureLevel < 30) {\n        console.log(\"Soil is dry. Increasing watering duration.\");\n        event.increaseWateringDuration(30); // Increase by 30 minutes\n    } else {\n        console.log(\"Soil moisture is sufficient. Standard watering duration.\");\n        event.setStandardWateringDuration();\n    }\n}\n\n// Routine to water the garden in the morning\nfunction morningWateringRoutine() {\n    if(event.morningWateringRoutine) {\n        startWatering();\n        setWateringSchedule('06:00');\n        let moistureLevel = checkSoilMoisture();\n        adjustWatering(moistureLevel);\n        stopWatering();\n    }\n}\n\n// Routine to check soil moisture and adjust watering in the evening\nfunction eveningWateringRoutine() {\n    if(event.eveningWateringRoutine) {\n        let moistureLevel = checkSoilMoisture();\n        adjustWatering(moistureLevel);\n    }\n}",
        "accurate_docstring": "When in the morningWateringRoutine, the system starts watering the garden, sets the watering schedule to 06:00, checks the soil moisture level, adjusts the watering duration based on the moisture level, and stops watering. If the soil is dry (moisture level < 30%), the watering duration is increased by 30 minutes. If the soil moisture is sufficient, the standard watering duration is set. When in the eveningWateringRoutine, the system checks the soil moisture level and adjusts the watering duration based on the moisture level.",
        "class": "garden",
        "template_docstring": "WHEN in the morningWateringRoutine, DO start watering the garden; set the watering schedule to 06:00; check the soil moisture level; adjust the watering duration based on the moisture level; stop watering; IF the soil is dry (moisture level < 30%), THEN increase the watering duration by 30 minutes; IF the soil moisture is sufficient, THEN set the standard watering duration; WHEN in the eveningWateringRoutine, DO check the soil moisture level; adjust the watering duration based on the moisture level."
    },
    {
        "code": "// Function to monitor weather conditions\nfunction monitorWeather() {\n    let weatherData = event.getWeatherData();\n    console.log(`Current weather data: ${JSON.stringify(weatherData)}`);\n    return weatherData;\n}\n\n// Function to adjust irrigation based on weather\nfunction adjustIrrigationBasedOnWeather(zone) {\n    let weatherData = monitorWeather();\n    if (weatherData.precipitation > 0) {\n        console.log(`Rain detected. Skipping irrigation in ${zone}.`);\n    } else {\n        console.log(`No rain detected. Irrigating ${zone}.`);\n        event.scheduleIrrigation(zone, 20);\n    }\n}\n\n// Function to adjust lighting based on weather\nfunction adjustLightingBasedOnWeather(zone) {\n    let weatherData = monitorWeather();\n    if (weatherData.cloudCover > 50) {\n        console.log(`High cloud cover detected. Turning on additional lighting in ${zone}.`);\n        event.controlLighting(zone, 'on');\n    } else {\n        console.log(`Low cloud cover detected. Using natural light in ${zone}.`);\n        event.controlLighting(zone, 'off');\n    }\n}\n\n// Morning routine for weather-based garden management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        adjustIrrigationBasedOnWeather('garden1');\n        adjustLightingBasedOnWeather('garden1');\n        console.log('Morning weather adaptation completed.');\n    }\n}\n\n// Afternoon routine for weather-based garden management\nfunction afternoonRoutine() {\n    if (event.afternoonRoutine) {\n        adjustIrrigationBasedOnWeather('garden2');\n        adjustLightingBasedOnWeather('garden2');\n        console.log('Afternoon weather adaptation completed.');\n    }\n}\n\n// Evening routine for weather-based garden management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        adjustIrrigationBasedOnWeather('garden3');\n        adjustLightingBasedOnWeather('garden3');\n        console.log('Evening weather adaptation completed.');\n    }\n}",
        "accurate_docstring": "When in morningRoutine, monitor the weather, if rain is detected, skip irrigation in garden1, otherwise, irrigate garden1 for 20 minutes. If cloud cover is greater than 50%, turn on additional lighting in garden1, otherwise, use natural light. When in afternoonRoutine, monitor the weather, if rain is detected, skip irrigation in garden2, otherwise, irrigate garden2 for 20 minutes. If cloud cover is greater than 50%, turn on additional lighting in garden2, otherwise, use natural light. When in eveningRoutine, monitor the weather, if rain is detected, skip irrigation in garden3, otherwise, irrigate garden3 for 20 minutes. If cloud cover is greater than 50%, turn on additional lighting in garden3, otherwise, use natural light.",
        "class": "garden",
        "template_docstring": "WHEN in morningRoutine, DO monitor the weather; IF rain is detected, THEN skip irrigation in garden1; OTHERWISE, irrigate garden1 for 20 minutes; IF cloud cover is greater than 50%, THEN turn on additional lighting in garden1; OTHERWISE, use natural light; WHEN in afternoonRoutine, DO monitor the weather; IF rain is detected, THEN skip irrigation in garden2; OTHERWISE, irrigate garden2 for 20 minutes; IF cloud cover is greater than 50%, THEN turn on additional lighting in garden2; OTHERWISE, use natural light; WHEN in eveningRoutine, DO monitor the weather; IF rain is detected, THEN skip irrigation in garden3; OTHERWISE, irrigate garden3 for 20 minutes; IF cloud cover is greater than 50%, THEN turn on additional lighting in garden3; OTHERWISE, use natural light."
    },
    {
        "code": "// Function to start watering the garden\nfunction startWatering() {\n    console.log(\"Starting watering.\");\n    event.startWatering();\n}\n\n// Function to stop watering the garden\nfunction stopWatering() {\n    console.log(\"Stopping watering.\");\n    event.stopWatering();\n}\n\n// Function to check soil moisture level\nfunction checkSoilMoisture() {\n    let moistureLevel = event.getSoilMoisture();\n    console.log(`Soil moisture level: ${moistureLevel}%`);\n    return moistureLevel;\n}\n\n// Function to set a watering schedule\nfunction setWateringSchedule(time) {\n    console.log(`Setting watering schedule to ${time}.`);\n    event.setWateringSchedule(time);\n}\n\n// Function to adjust watering based on soil moisture\nfunction adjustWatering(moistureLevel) {\n    if (moistureLevel < 30) {\n        console.log(\"Soil is dry. Increasing watering duration.\");\n        event.increaseWateringDuration(30); // Increase by 30 minutes\n    } else {\n        console.log(\"Soil moisture is sufficient. Standard watering duration.\");\n        event.setStandardWateringDuration();\n    }\n}\n\n// Routine to water the garden in the morning\nfunction morningWateringRoutine() {\n    if(event.morningWateringRoutine) {\n        startWatering();\n        setWateringSchedule('06:00');\n        let moistureLevel = checkSoilMoisture();\n        adjustWatering(moistureLevel);\n        stopWatering();\n    }\n}\n\n// Routine to check soil moisture and adjust watering in the evening\nfunction eveningWateringRoutine() {\n    if(event.eveningWateringRoutine) {\n        let moistureLevel = checkSoilMoisture();\n        adjustWatering(moistureLevel);\n    }\n}",
        "accurate_docstring": "When in the gardenRoutine, the system starts watering the garden, sets the watering schedule to 06:00, and adjusts the water flow based on soil moisture and weather forecast. If the forecast is 'rain', sets water flow to level 1; if soil moisture is below 30, sets water flow to level 5; otherwise, sets water flow to level 3. When in the eveningGardenRoutine, the system stops watering and sets water flow to level 2.",
        "class": "garden",
        "template_docstring": "WHEN in the gardenRoutine, DO start watering the garden; set the watering schedule to 06:00; adjust the water flow based on soil moisture and weather forecast; IF the forecast is 'rain', THEN set water flow to level 1; IF soil moisture is below 30, THEN set water flow to level 5; OTHERWISE, set water flow to level 3; WHEN in the eveningGardenRoutine, DO stop watering; set water flow to level 2."
    },
    {
        "code": "// Function to monitor soil moisture\nfunction monitorSoilMoisture(zone) {\n    let moistureLevel = event.getSoilMoisture(zone);\n    console.log(`Soil moisture level in ${zone}: ${moistureLevel}%`);\n    return moistureLevel;\n}\n\n// Function to schedule irrigation\nfunction scheduleIrrigation(zone, duration) {\n    console.log(`Scheduling irrigation in ${zone} for ${duration} minutes.`);\n    event.scheduleIrrigation(zone, duration);\n}\n\n// Function to track water usage\nfunction trackWaterUsage(zone) {\n    let waterUsage = event.getWaterUsage(zone);\n    console.log(`Water usage in ${zone}: ${waterUsage} liters`);\n    return waterUsage;\n}\n\n// Function to alert greenhouse staff\nfunction alertGreenhouseStaff(message) {\n    console.log(`Alerting greenhouse staff: ${message}`);\n    event.alertGreenhouseStaff(message);\n}\n\n// Morning routine for irrigation management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        let moistureLevel = monitorSoilMoisture('zone1');\n        if (moistureLevel < 30) {\n            scheduleIrrigation('zone1', 15);\n        }\n        trackWaterUsage('zone1');\n        alertGreenhouseStaff('Morning irrigation completed.');\n    }\n}\n\n// Midday routine for irrigation management\nfunction middayRoutine() {\n    if (event.middayRoutine) {\n        let moistureLevel = monitorSoilMoisture('zone2');\n        if (moistureLevel < 40) {\n           scheduleIrrigation('zone2', 20);\n        }\n        trackWaterUsage('zone2');\n        alertGreenhouseStaff('Midday irrigation completed.');\n    }\n}\n\n// Evening routine for irrigation management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        let moistureLevel = monitorSoilMoisture('zone3');\n        if (moistureLevel < 35) {\n            scheduleIrrigation('zone3', 25);\n        }\n        trackWaterUsage('zone3');\n        alertGreenhouseStaff('Evening irrigation completed.');\n    }\n}",
        "accurate_docstring": "When in morningRoutine, monitor the soil moisture level in zone1. If the moisture level is below 30%, schedule irrigation for 15 minutes. Track the water usage in zone1 and alert the greenhouse staff that morning irrigation has been completed. When in middayRoutine, monitor the soil moisture level in zone2. If the moisture level is below 40%, schedule irrigation for 20 minutes. Track the water usage in zone2 and alert the greenhouse staff that midday irrigation has been completed. When in eveningRoutine, monitor the soil moisture level in zone3. If the moisture level is below 35%, schedule irrigation for 25 minutes. Track the water usage in zone3 and alert the greenhouse staff that evening irrigation has been completed.",
        "class": "garden",
        "template_docstring": "WHEN in morningRoutine, DO monitor the soil moisture level in zone1; IF the moisture level is below 30%, THEN schedule irrigation for 15 minutes; track the water usage in zone1; alert the greenhouse staff that morning irrigation has been completed; WHEN in middayRoutine, DO monitor the soil moisture level in zone2; IF the moisture level is below 40%, THEN schedule irrigation for 20 minutes; track the water usage in zone2; alert the greenhouse staff that midday irrigation has been completed; WHEN in eveningRoutine, DO monitor the soil moisture level in zone3; IF the moisture level is below 35%, THEN schedule irrigation for 25 minutes; track the water usage in zone3; alert the greenhouse staff that evening irrigation has been completed."
    },
    {
        "code": "// Function to monitor nutrient levels\nfunction monitorNutrientLevels(zone) {\n    let nutrientLevels = event.getNutrientLevels(zone);\n    console.log(`Nutrient levels in ${zone}: ${JSON.stringify(nutrientLevels)}`);\n    return nutrientLevels;\n}\n\n// Function to dose nutrients\nfunction doseNutrients(zone, nutrient, amount) {\n    console.log(`Dosing ${amount} of ${nutrient} in ${zone}.`);\n    event.doseNutrients(zone, nutrient, amount);\n}\n\n// Function to monitor plant health\nfunction monitorPlantHealth(zone) {\n    let plantHealth = event.getPlantHealth(zone);\n    console.log(`Plant health in ${zone}: ${JSON.stringify(plantHealth)}`);\n    return plantHealth;\n}\n\n// Function to alert greenhouse staff\nfunction alertGreenhouseStaff(message) {\n    console.log(`Alerting greenhouse staff: ${message}`);\n    event.alertGreenhouseStaff(message);\n}\n\n// Morning routine for nutrient delivery\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        monitorNutrientLevels('zone1');\n        doseNutrients('zone1', 'NPK', 50);\n        monitorPlantHealth('zone1');\n        alertGreenhouseStaff('Morning nutrient delivery completed.');\n    }\n}\n\n// Midday routine for nutrient delivery\nfunction middayRoutine() {\n    if (event.middayRoutine) {\n        monitorNutrientLevels('zone2');\n        doseNutrients('zone2', 'NPK', 60);\n        monitorPlantHealth('zone2');\n        alertGreenhouseStaff('Midday nutrient delivery completed.');\n    }\n}\n\n// Evening routine for nutrient delivery\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        monitorNutrientLevels('zone3');\n        doseNutrients('zone3', 'NPK', 40);\n        monitorPlantHealth('zone3');\n        alertGreenhouseStaff('Evening nutrient delivery completed.');\n    }\n}",
        "accurate_docstring": "When in morningRoutine, monitor nutrient levels in zone1, dose 50 units of NPK nutrients, monitor plant health, and alert the greenhouse staff that morning nutrient delivery has been completed. When in middayRoutine, monitor nutrient levels in zone2, dose 60 units of NPK nutrients, monitor plant health, and alert the greenhouse staff that midday nutrient delivery has been completed. When in eveningRoutine, monitor nutrient levels in zone3, dose 40 units of NPK nutrients, monitor plant health, and alert the greenhouse staff that evening nutrient delivery has been completed.",
        "class": "garden",
        "template_docstring": "WHEN in morningRoutine, DO monitor nutrient levels in zone1; dose 50 units of NPK nutrients; monitor plant health; alert the greenhouse staff that morning nutrient delivery has been completed; WHEN in middayRoutine, DO monitor nutrient levels in zone2; dose 60 units of NPK nutrients; monitor plant health; alert the greenhouse staff that midday nutrient delivery has been completed; WHEN in eveningRoutine, DO monitor nutrient levels in zone3; dose 40 units of NPK nutrients; monitor plant health; alert the greenhouse staff that evening nutrient delivery has been completed."
    },
    {
        "code": "// Function to detect pests\nfunction detectPests(zone) {\n    let pestDetected = event.detectPests(zone);\n    console.log(`Pests detected in ${zone}: ${pestDetected}`);\n    return pestDetected;\n}\n\n// Function to apply pesticide\nfunction applyPesticide(zone) {\n    console.log(`Applying pesticide in ${zone}.`);\n    event.applyPesticide(zone);\n}\n\n// Function to monitor greenhouse environment\nfunction monitorEnvironment(zone) {\n    let environmentStatus = event.getEnvironmentStatus(zone);\n    console.log(`Environment status in ${zone}: ${JSON.stringify(environmentStatus)}`);\n    return environmentStatus;\n}\n\n// Function to alert greenhouse staff\nfunction alertGreenhouseStaff(message) {\n    console.log(`Alerting greenhouse staff: ${message}`);\n    event.alertGreenhouseStaff(message);\n}\n\n// Morning routine for pest management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        let pests = detectPests('zone1');\n        if (pests) {\n            applyPesticide('zone1');\n        }\n        monitorEnvironment('zone1');\n        alertGreenhouseStaff('Morning pest management completed.');\n    }\n}\n\n// Afternoon routine for pest management\nfunction afternoonRoutine() {\n    if (event.afternoonRoutine) {\n        let pests = detectPests('zone2');\n        if (pests) {\n            applyPesticide('zone2');\n        }\n        monitorEnvironment('zone2');\n        alertGreenhouseStaff('Afternoon pest management completed.');\n    }\n}\n\n// Evening routine for pest management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        let pests = detectPests('zone3');\n        if (pests) {\n            applyPesticide('zone3');\n        }\n        monitorEnvironment('zone3');\n        alertGreenhouseStaff('Evening pest management completed.');\n    }\n}",
        "accurate_docstring": "When in morningRoutine, detect pests in zone1 and apply pesticide if pests are detected, monitor the greenhouse environment, and alert greenhouse staff that morning pest management has been completed. When in afternoonRoutine, detect pests in zone2 and apply pesticide if pests are detected, monitor the greenhouse environment, and alert greenhouse staff that afternoon pest management has been completed. When in eveningRoutine, detect pests in zone3 and apply pesticide if pests are detected, monitor the greenhouse environment, and alert greenhouse staff that evening pest management has been completed.",
        "class": "garden",
        "template_docstring": "WHEN in morningRoutine, DO detect pests in zone1; apply pesticide if pests are detected; monitor the greenhouse environment; alert greenhouse staff that morning pest management has been completed; WHEN in afternoonRoutine, DO detect pests in zone2; apply pesticide if pests are detected; monitor the greenhouse environment; alert greenhouse staff that afternoon pest management has been completed; WHEN in eveningRoutine, DO detect pests in zone3; apply pesticide if pests are detected; monitor the greenhouse environment; alert greenhouse staff that evening pest management has been completed."
    },
    {
        "code": "// Function to monitor pollinator activity\nfunction monitorPollinatorActivity(zone) {\n    let pollinatorActivity = event.getPollinatorActivity(zone);\n    console.log(`Pollinator activity in ${zone}: ${pollinatorActivity}`);\n    return pollinatorActivity;\n}\n\n// Function to control pollination robots\nfunction controlPollinationRobots(zone, action) {\n    console.log(`Performing ${action} action in ${zone} with pollination robots.`);\n    event.controlPollinationRobots(zone, action);\n}\n\n// Function to manage environmental conditions for pollination\nfunction manageEnvironmentForPollination(zone, temp, humidity) {\n    console.log(`Setting temperature in ${zone} to ${temp}°C and humidity to ${humidity}%.`);\n    event.manageEnvironmentForPollination(zone, temp, humidity);\n}\n\n// Function to notify greenhouse staff about pollination\nfunction notifyGreenhouseStaff(message) {\n    console.log(`Notifying greenhouse staff: ${message}`);\n    event.notifyGreenhouseStaff(message);\n}\n\n// Morning routine for pollination management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        monitorPollinatorActivity('zone1');\n        controlPollinationRobots('zone1', 'start');\n        manageEnvironmentForPollination('zone1', 22, 60);\n        notifyGreenhouseStaff('Morning pollination started.');\n    }\n}\n\n// Afternoon routine for pollination management\nfunction afternoonRoutine() {\n    if (event.afternoonRoutine) {\n        monitorPollinatorActivity('zone2');\n        controlPollinationRobots('zone2', 'pause');\n        manageEnvironmentForPollination('zone2', 24, 65);\n        notifyGreenhouseStaff('Afternoon pollination in progress.');\n    }\n}\n\n// Evening routine for pollination management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        monitorPollinatorActivity('zone3');\n        controlPollinationRobots('zone3', 'stop');\n        manageEnvironmentForPollination('zone3', 18, 70);\n        notifyGreenhouseStaff('Evening pollination ended.');\n    }\n}",
        "accurate_docstring": "When in morningRoutine, monitor pollinator activity in zone1, start pollination robots, set temperature to 22°C and humidity to 60%, and notify greenhouse staff that morning pollination has started. When in afternoonRoutine, monitor pollinator activity in zone2, pause pollination robots, set temperature to 24°C and humidity to 65%, and notify greenhouse staff that afternoon pollination is in progress. When in eveningRoutine, monitor pollinator activity in zone3, stop pollination robots, set temperature to 18°C and humidity to 70%, and notify greenhouse staff that evening pollination has ended.",
        "class": "garden",
        "template_docstring": "WHEN in morningRoutine, DO monitor pollinator activity in zone1; start pollination robots; set temperature to 22°C and humidity to 60%; notify greenhouse staff that morning pollination has started; WHEN in afternoonRoutine, DO monitor pollinator activity in zone2; pause pollination robots; set temperature to 24°C and humidity to 65%; notify greenhouse staff that afternoon pollination is in progress; WHEN in eveningRoutine, DO monitor pollinator activity in zone3; stop pollination robots; set temperature to 18°C and humidity to 70%; notify greenhouse staff that evening pollination has ended."
    },
    {
        "code": "// Function to monitor soil moisture\\nfunction monitorSoilMoisture(zone) {\\n    let moisture = event.getSoilMoisture(zone);\\n    console.log(`Soil moisture in ${zone}: ${moisture}%`);\\n    return moisture;\\n}\\n\\n// Function to monitor light levels\\nfunction monitorLightLevels(zone) {\\n    let lightLevels = event.getLightLevels(zone);\\n    console.log(`Light levels in ${zone}: ${lightLevels} lux`);\\n    return lightLevels;\\n}\\n\\n// Function to activate irrigation system\\nfunction activateIrrigation(zone, duration) {\\n    console.log(`Activating irrigation in ${zone} for ${duration} minutes.`);\\n    event.activateIrrigation(zone, duration);\\n}\\n\\n// Function to adjust shading system\\nfunction adjustShading(zone, setting) {\\n    console.log(`Adjusting shading in ${zone} to ${setting}.`);\\n    event.adjustShading(zone, setting);\\n}\\n\\n// Function to notify gardener\\nfunction notifyGardener(message) {\\n    console.log(`Notifying gardener: ${message}`);\\n    event.notifyGardener(message);\\n}\\n\\n// Morning routine for garden maintenance\\nfunction morningGardenRoutine() {\\n    if (event.morningRoutine) {\\n        let moisture = monitorSoilMoisture('zone1');\\n        if (moisture < 30) {\\n            activateIrrigation('zone1', 20);\\n        }\\n        let lightLevels = monitorLightLevels('zone1');\\n        if (lightLevels > 10000) {\\n            adjustShading('zone1', 'increase');\\n        }\\n        notifyGardener('Morning garden maintenance completed.');\\n    }\\n}\\n\\n// Afternoon routine for garden maintenance\\nfunction afternoonGardenRoutine() {\\n    if (event.afternoonRoutine) {\\n        let moisture = monitorSoilMoisture('zone2');\\n        if (moisture < 25) {\\n            activateIrrigation('zone2', 15);\\n        }\\n        let lightLevels = monitorLightLevels('zone2');\\n        if (lightLevels < 5000) {\\n            adjustShading('zone2', 'decrease');\\n        }\\n        notifyGardener('Afternoon garden maintenance completed.');\\n    }\\n}\\n\\n// Evening routine for garden maintenance\\nfunction eveningGardenRoutine() {\\n    if (event.eveningRoutine) {\\n        let moisture = monitorSoilMoisture('zone3');\\n        if (moisture < 20) {\\n            activateIrrigation('zone3', 10);\\n        }\\n        let lightLevels = monitorLightLevels('zone3');\\n        if (lightLevels > 15000) {\\n            adjustShading('zone3', 'increase');\\n        }\\n        notifyGardener('Evening garden maintenance completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningGardenRoutine, monitor the soil moisture in zone1. If the moisture is below 30%, activate the irrigation system for 20 minutes. Monitor the light levels in zone1. If the light levels are greater than 10000 lux, adjust the shading system to increase. Notify the gardener that the morning garden maintenance is completed. When in the afternoonGardenRoutine, monitor the soil moisture in zone2. If the moisture is below 25%, activate the irrigation system for 15 minutes. Monitor the light levels in zone2. If the light levels are less than 5000 lux, adjust the shading system to decrease. Notify the gardener that the afternoon garden maintenance is completed. When in the eveningGardenRoutine, monitor the soil moisture in zone3. If the moisture is below 20%, activate the irrigation system for 10 minutes. Monitor the light levels in zone3. If the light levels are greater than 15000 lux, adjust the shading system to increase. Notify the gardener that the evening garden maintenance is completed.",
        "class": "garden",
        "template_docstring": "WHEN in the morningGardenRoutine, DO monitor the soil moisture in zone1; IF the moisture is below 30%, THEN activate the irrigation system for 20 minutes; monitor the light levels in zone1; IF the light levels are greater than 10000 lux, THEN adjust the shading system to increase; notify the gardener that the morning garden maintenance is completed; WHEN in the afternoonGardenRoutine, DO monitor the soil moisture in zone2; IF the moisture is below 25%, THEN activate the irrigation system for 15 minutes; monitor the light levels in zone2; IF the light levels are less than 5000 lux, THEN adjust the shading system to decrease; notify the gardener that the afternoon garden maintenance is completed; WHEN in the eveningGardenRoutine, DO monitor the soil moisture in zone3; IF the moisture is below 20%, THEN activate the irrigation system for 10 minutes; monitor the light levels in zone3; IF the light levels are greater than 15000 lux, THEN adjust the shading system to increase; notify the gardener that the evening garden maintenance is completed."
    }
]