[
    {
        "code": "// Function to adjust office lighting based on occupancy\nfunction adjustOfficeLighting(occupancy, brightness) {\n    if (occupancy > 0) {\n        console.log(`Office occupied. Setting lights to ${brightness}%.`);\n        event.setOfficeLighting('on', brightness);\n    } else {\n        console.log(\"Office empty. Turning lights off.\");\n        event.setOfficeLighting('off', 0);\n    }\n}\n\n// Function to set HVAC temperature based on time of day\nfunction setHVACTemperature(time, temp) {\n    console.log(`Setting HVAC temperature to ${temp}°C at ${time}.`);\n    event.setHVACTemperature(temp);\n}\n\n// Function to check room occupancy\nfunction checkRoomOccupancy() {\n    let occupancy = event.getRoomOccupancy();\n    console.log(`Room occupancy: ${occupancy}`);\n    return occupancy;\n}\n\n// Function to manage energy usage based on room occupancy and time of day\nfunction manageEnergyUsage() {\n    let occupancy = checkRoomOccupancy();\n    let time = new Date().toTimeString().split(' ')[0];\n    let brightness = occupancy > 0 ? 70 : 0;\n    adjustOfficeLighting(occupancy, brightness);\n    setHVACTemperature(time, time < '12:00' ? 22 : 24);\n}\n\n// Morning routine to prepare the office for the day\nfunction morningOfficeRoutine() {\n    if (event.morningOfficeRoutine) {\n        manageEnergyUsage();\n    }\n}\n\n// Afternoon routine to optimize energy usage and comfort\nfunction afternoonOfficeRoutine() {\n    if (event.afternoonOfficeRoutine) {\n        manageEnergyUsage();\n    }\n}\n\n// Evening routine to shut down non-essential systems and save energy\nfunction eveningOfficeRoutine() {\n    if (event.eveningOfficeRoutine) {\n        adjustOfficeLighting(0, 0); // Assume office is empty\n        setHVACTemperature('18:00', 20);\n        event.shutDownNonEssentialSystems();\n    }\n}",
        "accurate_docstring": "When in morningOfficeRoutine, check room occupancy, set office lighting to 70% if occupied, turn lights off if empty, and set HVAC temperature to 22°C. When in afternoonOfficeRoutine, check room occupancy, set office lighting to 70% if occupied, turn lights off if empty, and set HVAC temperature to 24°C. When in eveningOfficeRoutine, turn off office lighting, set HVAC temperature to 20°C at 18:00, and shut down non-essential systems.",
        "class": "office",
        "template_docstring": "WHEN in morningOfficeRoutine, DO check room occupancy; set office lighting to 70% if occupied; turn lights off if empty; set HVAC temperature to 22°C; WHEN in afternoonOfficeRoutine, DO check room occupancy; set office lighting to 70% if occupied; turn lights off if empty; set HVAC temperature to 24°C; WHEN in eveningOfficeRoutine, DO turn off office lighting; set HVAC temperature to 20°C at 18:00; shut down non-essential systems."
    },
    {
        "code": "// Function to monitor air quality\nfunction monitorAirQuality() {\n    let airQuality = event.getAirQuality();\n    console.log(`Current air quality: ${JSON.stringify(airQuality)}`);\n    return airQuality;\n}\n\n// Function to adjust lighting based on occupancy\nfunction adjustLighting(occupancy) {\n    if (occupancy) {\n        console.log('Office is occupied. Turning on lights.');\n        event.controlLighting('office', 'on');\n    } else {\n        console.log('Office is empty. Turning off lights.');\n        event.controlLighting('office', 'off');\n    }\n}\n\n// Function to adjust temperature based on time of day\nfunction adjustTemperature(timeOfDay) {\n    let temp;\n    if (timeOfDay === 'morning') {\n        temp = 22;\n    } else if (timeOfDay === 'afternoon') {\n        temp = 24;\n    } else {\n        temp = 20;\n    }\n    console.log(`Setting office temperature to ${temp}°C.`);\n    event.controlTemperature('office', temp);\n}\n\n// Function to monitor energy usage\nfunction monitorEnergyUsage() {\n    let energyUsage = event.getEnergyUsage('office');\n    console.log(`Current energy usage: ${energyUsage} kWh`);\n    return energyUsage;\n}\n\n// Morning routine for office management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        adjustLighting(true);\n        adjustTemperature('morning');\n        monitorAirQuality();\n        monitorEnergyUsage();\n        console.log('Morning office management routine completed.');\n    }\n}\n\n// Afternoon routine for office management\nfunction afternoonRoutine() {\n    if (event.afternoonRoutine) {\n        adjustLighting(true);\n        adjustTemperature('afternoon');\n        monitorAirQuality();\n        monitorEnergyUsage();\n        console.log('Afternoon office management routine completed.');\n    }\n}\n\n// Evening routine for office management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        adjustLighting(false);\n        adjustTemperature('evening');\n        monitorAirQuality();\n        monitorEnergyUsage();\n        console.log('Evening office management routine completed.');\n    }\n}",
        "accurate_docstring": "In morningRoutine, turn on the office lights, set the temperature to 22°C, monitor air quality, monitor energy usage, and complete the morning office management routine. In afternoonRoutine, keep the office lights on, set the temperature to 24°C, monitor air quality, monitor energy usage, and complete the afternoon office management routine. In eveningRoutine, turn off the office lights, set the temperature to 20°C, monitor air quality, monitor energy usage, and complete the evening office management routine.",
        "class": "office",
        "template_docstring": "WHEN in morningRoutine, DO turn on the office lights; set the temperature to 22°C; monitor air quality; monitor energy usage; complete the morning office management routine; WHEN in afternoonRoutine, DO keep the office lights on; set the temperature to 24°C; monitor air quality; monitor energy usage; complete the afternoon office management routine; WHEN in eveningRoutine, DO turn off the office lights; set the temperature to 20°C; monitor air quality; monitor energy usage; complete the evening office management routine."
    },
    {
        "code": "// Function to book a meeting room\nfunction bookMeetingRoom(room, time) {\n    console.log(`Booking ${room} for ${time}.`);\n    event.bookMeetingRoom(room, time);\n}\n\n// Function to adjust office lighting based on occupancy\nfunction adjustOfficeLighting(occupancy) {\n    if (occupancy > 0) {\n        console.log(\"Office occupied. Turning lights on.\");\n        event.setOfficeLighting('on');\n    } else {\n        console.log(\"Office empty. Turning lights off.\");\n        event.setOfficeLighting('off');\n    }\n}\n\n// Function to set HVAC temperature based on time of day\nfunction setHVACTemperature(time) {\n    let temp = time < '12:00' ? 22 : 24; // Cooler in the morning, warmer in the afternoon\n    console.log(`Setting HVAC temperature to ${temp}°C.`);\n    event.setHVACTemperature(temp);\n}\n\n// Function to check room occupancy\nfunction checkRoomOccupancy() {\n    let occupancy = event.getRoomOccupancy();\n    console.log(`Room occupancy: ${occupancy}`);\n    return occupancy;\n}\n\n// Function to manage energy usage based on room occupancy and time of day\nfunction manageEnergyUsage() {\n    let occupancy = checkRoomOccupancy();\n    let time = new Date().toTimeString().split(' ')[0];\n    adjustOfficeLighting(occupancy);\n    setHVACTemperature(time);\n}\n\n// Morning routine to prepare the office for the day\nfunction morningOfficeRoutine() {\n    if (event.morningOfficeRoutine) {\n        bookMeetingRoom('Conference Room', '09:00');\n        manageEnergyUsage();\n    }\n}\n\n// Afternoon routine to optimize energy usage and comfort\nfunction afternoonOfficeRoutine() {\n    if (event.afternoonOfficeRoutine) {\n        manageEnergyUsage();\n        bookMeetingRoom('Conference Room', '14:00');\n    }\n}\n\n// Evening routine to shut down non-essential systems and save energy\nfunction eveningOfficeRoutine() {\n    if (event.eveningOfficeRoutine) {\n        adjustOfficeLighting(0); // Assume office is empty\n        setHVACTemperature('18:00');\n        event.shutDownNonEssentialSystems();\n    }\n}",
        "accurate_docstring": "In morningOfficeRoutine, book the Conference Room for 09:00, manage energy usage by checking room occupancy, adjusting office lighting based on occupancy, and setting HVAC temperature according to the time of day. In afternoonOfficeRoutine, manage energy usage similarly and book the Conference Room for 14:00. In eveningOfficeRoutine, assume the office is empty, turn off office lighting, set HVAC temperature for 18:00, and shut down non-essential systems to save energy.",
        "class": "office",
        "template_docstring": "WHEN in morningOfficeRoutine, DO book the Conference Room for 09:00; manage energy usage by checking room occupancy; adjust office lighting based on occupancy; set HVAC temperature according to the time of day; WHEN in afternoonOfficeRoutine, DO manage energy usage similarly; book the Conference Room for 14:00; WHEN in eveningOfficeRoutine, DO assume the office is empty; turn off office lighting; set HVAC temperature for 18:00; shut down non-essential systems to save energy."
    },
    {
        "code": "function sendNotification(message) {\n    console.log(`Notification: ${message}`);\n    event.sendNotificationToSystem(message); \n}\nfunction adjustSeat(userId, preferences) {\n    event.adjustChairHeight(userId, preferences.chairHeight);\n    event.adjustLumbarSupport(userId, preferences.lumbarSupport);\n    event.adjustArmrestPosition(userId, preferences.armrestPosition);\n}\nfunction adjustDesk(userId, preferences) {\n    event.adjustDeskHeight(userId, preferences.deskHeight);\n    event.adjustMonitorPosition(userId, preferences.monitorPosition);\n}\neventBus.on('userLoggedIn', (userId) => {\n    sendNotification(`User ${userId} logged in.`);\n    const userPreferences = event.getUserPreferences(userId); \n    adjustSeat(userId, userPreferences);\n    adjustDesk(userId, userPreferences);\n});\neventBus.on('userPreferencesChanged', (userId, newPreferences) => {\n    sendNotification(`User ${userId} preferences updated.`);\n    adjustSeat(userId, newPreferences);\n    adjustDesk(userId, newPreferences);\n});\nfunction startSmartOfficeSeatingScene() {\n    event.turnOnSeatingAdjustmentSystem(); \n    event.turnOnDeskAdjustmentSystem(); \n    sendNotification('Smart Office Seating Scene started.'); \n}\nstartSmartOfficeSeatingScene();",
        "accurate_docstring": "The Smart Office Seating Scene starts by activating the seating and desk adjustment systems. It listens for events such as user login and preference changes. When a user logs in, it retrieves the user's preferences and automatically adjusts the chair and desk for optimal comfort. If a user updates their preferences, the system re-adjusts the chair and desk according to the new settings, ensuring personalized comfort for each user.",
        "class": "office",
        "template_docstring": "WHEN in the Smart Office Seating Scene, DO activate the seating and desk adjustment systems; listen for events such as user login and preference changes; WHEN a user logs in, DO retrieve the user's preferences; automatically adjust the chair and desk for optimal comfort; IF a user updates their preferences, THEN re-adjust the chair and desk according to the new settings, ensuring personalized comfort for each user."
    },
    {
        "code": "// Function to monitor air quality\\nfunction monitorAirQuality(zone) {\\n    let airQuality = event.getAirQuality(zone);\\n    console.log(`Air quality in ${zone}: ${JSON.stringify(airQuality)}`);\\n    return airQuality;\\n}\\n\\n// Function to adjust HVAC system\\nfunction adjustHVAC(zone, setting) {\\n    console.log(`Adjusting HVAC in ${zone} to ${setting}.`);\\n    event.adjustHVAC(zone, setting);\\n}\\n\\n// Function to alert office staff\\nfunction alertOfficeStaff(message) {\\n    console.log(`Alerting office staff: ${message}`);\\n    event.alertOfficeStaff(message);\\n}\\n\\n// Morning routine for office environment\\nfunction morningOfficeRoutine() {\\n    if (event.morningRoutine) {\\n        let airQuality = monitorAirQuality('zone1');\\n        if (airQuality.CO2 > 1000) {\\n            adjustHVAC('zone1', 'increase ventilation');\\n        }\\n        alertOfficeStaff('Morning office environment check completed.');\\n    }\\n}\\n\\n// Afternoon routine for office environment\\nfunction afternoonOfficeRoutine() {\\n    if (event.afternoonRoutine) {\\n        let airQuality = monitorAirQuality('zone2');\\n        if (airQuality.temperature > 25) {\\n            adjustHVAC('zone2', 'cooling');\\n        }\\n        alertOfficeStaff('Afternoon office environment check completed.');\\n    }\\n}\\n\\n// Evening routine for office environment\\nfunction eveningOfficeRoutine() {\\n    if (event.eveningRoutine) {\\n        let airQuality = monitorAirQuality('zone3');\\n        if (airQuality.humidity < 30) {\\n            adjustHVAC('zone3', 'humidification');\\n        }\\n        alertOfficeStaff('Evening office environment check completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningOfficeRoutine, monitor the air quality in zone1. If the CO2 level is greater than 1000, adjust the HVAC system to increase ventilation. Alert office staff that the morning office environment check is completed. When in the afternoonOfficeRoutine, monitor the air quality in zone2. If the temperature is greater than 25, adjust the HVAC system to cooling. Alert office staff that the afternoon office environment check is completed. When in the eveningOfficeRoutine, monitor the air quality in zone3. If the humidity is less than 30, adjust the HVAC system to humidification. Alert office staff that the evening office environment check is completed.",
        "class": "office",
        "template_docstring": "WHEN in the morningOfficeRoutine, DO monitor the air quality in zone1; IF the CO2 level is greater than 1000, THEN adjust the HVAC system to increase ventilation; alert office staff that the morning office environment check is completed; WHEN in the afternoonOfficeRoutine, DO monitor the air quality in zone2; IF the temperature is greater than 25, THEN adjust the HVAC system to cooling; alert office staff that the afternoon office environment check is completed; WHEN in the eveningOfficeRoutine, DO monitor the air quality in zone3; IF the humidity is less than 30, THEN adjust the HVAC system to humidification; alert office staff that the evening office environment check is completed."
    },
    {
        "code": "// Function to monitor lighting\\nfunction monitorLighting(zone) {\\n    let lightingStatus = event.getLightingStatus(zone);\\n    console.log(`Lighting status in ${zone}: ${JSON.stringify(lightingStatus)}`);\\n    return lightingStatus;\\n}\\n\\n// Function to adjust lighting\\nfunction adjustLighting(zone, setting) {\\n    console.log(`Adjusting lighting in ${zone} to ${setting}.`);\\n    event.adjustLighting(zone, setting);\\n}\\n\\n// Function to notify maintenance\\nfunction notifyMaintenance(message) {\\n    console.log(`Notifying maintenance: ${message}`);\\n    event.notifyMaintenance(message);\\n}\\n\\n// Morning routine for office lighting\\nfunction morningLightingRoutine() {\\n    if (event.morningRoutine) {\\n        let lightingStatus = monitorLighting('zone1');\\n        if (lightingStatus.level < 300) {\\n            adjustLighting('zone1', 'increase brightness');\\n        }\\n        notifyMaintenance('Morning lighting check completed.');\\n    }\\n}\\n\\n// Afternoon routine for office lighting\\nfunction afternoonLightingRoutine() {\\n    if (event.afternoonRoutine) {\\n        let lightingStatus = monitorLighting('zone2');\\n        if (lightingStatus.level > 700) {\\n            adjustLighting('zone2', 'reduce brightness');\\n        }\\n        notifyMaintenance('Afternoon lighting check completed.');\\n    }\\n}\\n\\n// Evening routine for office lighting\\nfunction eveningLightingRoutine() {\\n    if (event.eveningRoutine) {\\n        let lightingStatus = monitorLighting('zone3');\\n        if (lightingStatus.status == 'off') {\\n            adjustLighting('zone3', 'turn on');\\n        }\\n        notifyMaintenance('Evening lighting check completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningOfficeRoutine, monitor the lighting status in zone1. If the lighting level is less than 300, adjust the lighting to increase brightness. Notify maintenance that the morning lighting check is completed. When in the afternoonOfficeRoutine, monitor the lighting status in zone2. If the lighting level is greater than 700, adjust the lighting to reduce brightness. Notify maintenance that the afternoon lighting check is completed. When in the eveningLightingRoutine, monitor the lighting status in zone3. If the lighting is off, adjust the lighting to turn it on. Notify maintenance that the evening lighting check is completed.",
        "class": "office",
        "template_docstring": "WHEN in the morningOfficeRoutine, DO monitor the lighting status in zone1; IF the lighting level is less than 300, THEN adjust the lighting to increase brightness; notify maintenance that the morning lighting check is completed; WHEN in the afternoonOfficeRoutine, DO monitor the lighting status in zone2; IF the lighting level is greater than 700, THEN adjust the lighting to reduce brightness; notify maintenance that the afternoon lighting check is completed; WHEN in the eveningLightingRoutine, DO monitor the lighting status in zone3; IF the lighting is off, THEN adjust the lighting to turn it on; notify maintenance that the evening lighting check is completed."
    },
    {
        "code": "// Function to monitor noise levels\\nfunction monitorNoiseLevels(zone) {\\n    let noiseLevels = event.getNoiseLevels(zone);\\n    console.log(`Noise levels in ${zone}: ${noiseLevels} dB`);\\n    return noiseLevels;\\n}\\n\\n// Function to adjust white noise machines\\nfunction adjustWhiteNoise(zone, setting) {\\n    console.log(`Adjusting white noise machine in ${zone} to ${setting}.`);\\n    event.adjustWhiteNoise(zone, setting);\\n}\\n\\n// Function to notify HR\\nfunction notifyHR(message) {\\n    console.log(`Notifying HR: ${message}`);\\n    event.notifyHR(message);\\n}\\n\\n// Morning routine for noise control\\nfunction morningNoiseRoutine() {\\n    if (event.morningRoutine) {\\n        let noiseLevels = monitorNoiseLevels('zone1');\\n        if (noiseLevels > 70) {\\n            adjustWhiteNoise('zone1', 'increase');\\n        }\\n        notifyHR('Morning noise control completed.');\\n    }\\n}\\n\\n// Afternoon routine for noise control\\nfunction afternoonNoiseRoutine() {\\n    if (event.afternoonRoutine) {\\n        let noiseLevels = monitorNoiseLevels('zone2');\\n        if (noiseLevels < 50) {\\n            adjustWhiteNoise('zone2', 'decrease');\\n        }\\n        notifyHR('Afternoon noise control completed.');\\n    }\\n}\\n\\n// Evening routine for noise control\\nfunction eveningNoiseRoutine() {\\n    if (event.eveningRoutine) {\\n        let noiseLevels = monitorNoiseLevels('zone3');\\n        if (noiseLevels > 75) {\\n            adjustWhiteNoise('zone3', 'increase');\\n        }\\n        notifyHR('Evening noise control completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningNoiseRoutine, monitor the noise levels in zone1. If the noise levels are greater than 70 dB, adjust the white noise machine to increase the setting. Notify HR that the morning noise control is completed. When in the afternoonNoiseRoutine, monitor the noise levels in zone2. If the noise levels are less than 50 dB, adjust the white noise machine to decrease the setting. Notify HR that the afternoon noise control is completed. When in the eveningNoiseRoutine, monitor the noise levels in zone3. If the noise levels are greater than 75 dB, adjust the white noise machine to increase the setting. Notify HR that the evening noise control is completed.",
        "class": "office",
        "template_docstring": "WHEN in the morningNoiseRoutine, DO monitor the noise levels in zone1; IF the noise levels are greater than 70 dB, THEN adjust the white noise machine to increase the setting; notify HR that the morning noise control is completed; WHEN in the afternoonNoiseRoutine, DO monitor the noise levels in zone2; IF the noise levels are less than 50 dB, THEN adjust the white noise machine to decrease the setting; notify HR that the afternoon noise control is completed; WHEN in the eveningNoiseRoutine, DO monitor the noise levels in zone3; IF the noise levels are greater than 75 dB, THEN adjust the white noise machine to increase the setting; notify HR that the evening noise control is completed."
    },
    {
        "code": "function automaticFeeder() {\n    console.log(\"Activating automatic feeder.\");\n    event.feedPet();\n\n    function automaticWatering() {\n        console.log(\"Activating automatic watering.\");\n        event.waterPet();\n    }\n\n    function activityMonitoring() {\n        setInterval(() => {\n            const activityLevel = getActivityLevel();\n            event.sendmessage(`Pet activity level: ${activityLevel}`);\n            if (activityLevel < 3) {\n                console.log(\"Pet needs more activity.\");\n            }\n        }, 60000);\n    }\n\n    function adjustEnvironment() {\n        const temperature = getTemperature();\n        const humidity = getHumidity();\n        console.log(`Temperature: ${temperature}°C, Humidity: ${humidity}%`);\n        if (temperature > 25) {\n            console.log(\"Turning on air conditioning.\");\n            event.turnOnAirConditioning();\n        }\n        if (humidity < 40) {\n            console.log(\"Turning on humidifier.\");\n            event.turnOnHumidifier();\n        }\n    }\n\n    function remoteInteraction() {\n        console.log(\"Remote interaction activated.\");\n        event.activateRemoteControl();\n    }\n\n    eventBus.on('startPetCare', () => {\n        activityMonitoring();\n        adjustEnvironment();\n    });\n    eventBus.on('remoteInteraction', () => {\n        remoteInteraction();\n    });\n    eventBus.on('NeedFeed', () => {\n        automaticFeeder();\n    });\n    eventBus.on('NeedWater', () => {\n        automaticWatering();\n    });\n\n    function setupPetCareScene() {\n        eventBus.emit('startPetCare');\n        eventBus.emit('NeedFeed');\n        eventBus.emit('NeedWater');\n        eventBus.emit('remoteInteraction');\n    }\n\n    setupPetCareScene();\n}",
        "accurate_docstring": "Start office mode: When the user enters the home office, automatically activate office mode by turning on work lights, starting the computer and monitor, and adjusting the room temperature.Real-time environment monitoring: Use sensors to monitor indoor light, temperature, and air quality, and automatically adjust lighting, air conditioning, and the air purifier as needed.Focused work time: Play soft background music, start the Pomodoro timer to remind the user to work and take breaks.Video conference mode: When a video conference begins, automatically adjust the camera angle, optimize background lighting, and turn off background music.Break reminders: Based on work duration and health recommendations, regularly remind the user to stand up, move around, and do eye exercises.End office mode: When work ends, automatically turn off work equipment, adjust lighting to a comfortable mode, and play relaxing music.",
        "class": "office",
        "template_docstring": "Start office mode: WHEN the user enters the home office, DO automatically activate office mode by turning on work lights, starting the computer and monitor, and adjusting the room temperature. Real-time environment monitoring: Use sensors to monitor indoor light, temperature, and air quality, and automatically adjust lighting, air conditioning, and the air purifier as needed. Focused work time: Play soft background music; start the Pomodoro timer to remind the user to work and take breaks. Video conference mode: WHEN a video conference begins, DO automatically adjust the camera angle, optimize background lighting, and turn off background music. Break reminders: Based on work duration and health recommendations, regularly remind the user to stand up, move around, and do eye exercises. End office mode: WHEN work ends, DO automatically turn off work equipment, adjust lighting to a comfortable mode, and play relaxing music."
    }
]