[
    {
        "code": "// Function to monitor inventory levels\nfunction monitorInventory(product) {\n    let inventoryLevel = event.getInventoryLevel(product);\n    console.log(`Inventory level for ${product}: ${inventoryLevel}`);\n    return inventoryLevel;\n}\n\n// Function to analyze customer traffic\nfunction analyzeCustomerTraffic() {\n    let traffic = event.getCustomerTraffic();\n    console.log(`Customer traffic: ${traffic}`);\n    return traffic;\n}\n\n// Function to control store lighting\nfunction controlStoreLighting(state) {\n    console.log(`Setting store lighting to ${state}.`);\n    event.controlStoreLighting(state);\n}\n\n// Function to manage store HVAC\nfunction manageStoreHVAC(temp) {\n    console.log(`Setting store HVAC to ${temp}°C.`);\n    event.manageStoreHVAC(temp);\n}\n\n// Function to send promotional alert\nfunction sendPromotionalAlert(message) {\n    console.log(`Sending promotional alert: ${message}`);\n    event.sendPromotionalAlert(message);\n}\n\n// Opening routine for store preparation\nfunction openingStoreRoutine() {\n    if (event.openingStoreRoutine) {\n        monitorInventory('featured product');\n        controlStoreLighting('on');\n        manageStoreHVAC(22);\n        sendPromotionalAlert('Store is now open!');\n    }\n}\n\n// Midday routine for store operations\nfunction middayStoreRoutine() {\n    if (event.middayStoreRoutine) {\n        analyzeCustomerTraffic();\n        monitorInventory('fast-selling product');\n        sendPromotionalAlert('Midday special offer!');\n    }\n}\n\n// Closing routine for store shutdown\nfunction closingStoreRoutine() {\n    if (event.closingStoreRoutine) {\n        controlStoreLighting('off');\n        manageStoreHVAC(18);\n        monitorInventory('closing product');\n        sendPromotionalAlert('Store is now closed.');\n    }\n}",
        "accurate_docstring": "When in openingStoreRoutine, monitor inventory levels for the featured product, turn on store lighting, set HVAC to 22°C, and send a promotional alert that the store is open. When in middayStoreRoutine, analyze customer traffic, monitor inventory levels for a fast-selling product, and send a promotional alert for a midday special offer. When in closingStoreRoutine, turn off store lighting, set HVAC to 18°C, monitor inventory levels for the closing product, and send a promotional alert that the store is closed.",
        "class": "store",
        "template_docstring": "WHEN in openingStoreRoutine, DO monitor inventory levels for the featured product; turn on store lighting; set HVAC to 22°C; send a promotional alert that the store is open; WHEN in middayStoreRoutine, DO analyze customer traffic; monitor inventory levels for a fast-selling product; send a promotional alert for a midday special offer; WHEN in closingStoreRoutine, DO turn off store lighting; set HVAC to 18°C; monitor inventory levels for the closing product; send a promotional alert that the store is closed."
    },
    {
        "code": "// Function to track inventory\nfunction trackInventory(product) {\n    let inventoryLevel = event.getInventoryLevel(product);\n    console.log(`Inventory level for ${product}: ${inventoryLevel}`);\n    return inventoryLevel;\n}\n\n// Function to analyze customer behavior\nfunction analyzeCustomerBehavior(zone) {\n    let behaviorData = event.getCustomerBehavior(zone);\n    console.log(`Customer behavior data for ${zone}: ${JSON.stringify(behaviorData)}`);\n    return behaviorData;\n}\n\n// Function to control store lighting\nfunction controlStoreLighting(zone, action) {\n    console.log(`${action}ing lighting in ${zone}.`);\n    event.controlLighting(zone, action);\n}\n\n// Function to generate sales report\nfunction generateSalesReport() {\n    let salesData = event.getSalesData();\n    console.log(`Sales data: ${JSON.stringify(salesData)}`);\n    return salesData;\n}\n\n// Morning routine for retail store management\nfunction morningRoutine() {\n    if (event.morningRoutine) {\n        trackInventory('product1');\n        analyzeCustomerBehavior('entrance');\n        controlStoreLighting('store', 'on');\n        console.log('Morning retail store management routine completed.');\n    }\n}\n\n// Afternoon routine for retail store management\nfunction afternoonRoutine() {\n    if (event.afternoonRoutine) {\n        trackInventory('product2');\n        analyzeCustomerBehavior('aisles');\n        controlStoreLighting('store', 'adjust');\n        generateSalesReport();\n        console.log('Afternoon retail store management routine completed.');\n    }\n}\n\n// Evening routine for retail store management\nfunction eveningRoutine() {\n    if (event.eveningRoutine) {\n        trackInventory('product3');\n        analyzeCustomerBehavior('checkout');\n        controlStoreLighting('store', 'off');\n        generateSalesReport();\n        console.log('Evening retail store management routine completed.');\n    }\n}",
        "accurate_docstring": "In morningRoutine, track inventory for product1, analyze customer behavior at the entrance, turn on store lighting, and complete the morning retail store management routine. In afternoonRoutine, track inventory for product2, analyze customer behavior in the aisles, adjust store lighting, generate a sales report, and complete the afternoon retail store management routine. In eveningRoutine, track inventory for product3, analyze customer behavior at the checkout, turn off store lighting, generate a sales report, and complete the evening retail store management routine.",
        "class": "store",
        "template_docstring": "WHEN in morningRoutine, DO track inventory for product1; analyze customer behavior at the entrance; turn on store lighting; complete the morning retail store management routine; WHEN in afternoonRoutine, DO track inventory for product2; analyze customer behavior in the aisles; adjust store lighting; generate a sales report; complete the afternoon retail store management routine; WHEN in eveningRoutine, DO track inventory for product3; analyze customer behavior at the checkout; turn off store lighting; generate a sales report; complete the evening retail store management routine."
    },
    {
        "code": "// Function to monitor inventory\\nfunction monitorInventory(storeId) {\\n    let inventoryStatus = event.getInventoryStatus(storeId);\\n    console.log(`Inventory status for store ${storeId}: ${JSON.stringify(inventoryStatus)}`);\\n    return inventoryStatus;\\n}\\n\\n// Function to reorder stock\\nfunction reorderStock(storeId, item) {\\n    console.log(`Reordering ${item} for store ${storeId}.`);\\n    event.reorderStock(storeId, item);\\n}\\n\\n// Function to alert store manager\\nfunction alertStoreManager(message) {\\n    console.log(`Alerting store manager: ${message}`);\\n    event.alertStoreManager(message);\\n}\\n\\n// Morning routine for store operations\\nfunction morningStoreRoutine() {\\n    if (event.morningRoutine) {\\n        let inventory = monitorInventory('store1');\\n        if (inventory.items['milk'] < 10) {\\n            reorderStock('store1', 'milk');\\n        }\\n        alertStoreManager('Morning store inventory check completed.');\\n    }\\n}\\n\\n// Afternoon routine for store operations\\nfunction afternoonStoreRoutine() {\\n    if (event.afternoonRoutine) {\\n        let inventory = monitorInventory('store2');\\n        if (inventory.items['bread'] < 20) {\\n            reorderStock('store2', 'bread');\\n        }\\n        alertStoreManager('Afternoon store inventory check completed.');\\n    }\\n}\\n\\n// Evening routine for store operations\\nfunction eveningStoreRoutine() {\\n    if (event.eveningRoutine) {\\n        let inventory = monitorInventory('store3');\\n        if (inventory.items['eggs'] < 15) {\\n            reorderStock('store3', 'eggs');\\n        }\\n        alertStoreManager('Evening store inventory check completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningStoreRoutine, monitor the inventory of store1. If the inventory of milk is less than 10 units, reorder milk. Alert the store manager that the morning store inventory check is completed. When in the afternoonStoreRoutine, monitor the inventory of store2. If the inventory of bread is less than 20 units, reorder bread. Alert the store manager that the afternoon store inventory check is completed. When in the eveningStoreRoutine, monitor the inventory of store3. If the inventory of eggs is less than 15 units, reorder eggs. Alert the store manager that the evening store inventory check is completed.",
        "class": "store",
        "template_docstring": "WHEN in the morningStoreRoutine, DO monitor the inventory of store1; IF the inventory of milk is less than 10 units, THEN reorder milk; alert the store manager that the morning store inventory check is completed; WHEN in the afternoonStoreRoutine, DO monitor the inventory of store2; IF the inventory of bread is less than 20 units, THEN reorder bread; alert the store manager that the afternoon store inventory check is completed; WHEN in the eveningStoreRoutine, DO monitor the inventory of store3; IF the inventory of eggs is less than 15 units, THEN reorder eggs; alert the store manager that the evening store inventory check is completed."
    },
    {
        "code": "// Function to monitor checkout queues\\nfunction monitorCheckoutQueues(storeId) {\\n    let queueStatus = event.getCheckoutQueueStatus(storeId);\\n    console.log(`Checkout queue status for store ${storeId}: ${JSON.stringify(queueStatus)}`);\\n    return queueStatus;\\n}\\n\\n// Function to open additional checkout counters\\nfunction openCheckoutCounter(storeId) {\\n    console.log(`Opening additional checkout counter for store ${storeId}.`);\\n    event.openCheckoutCounter(storeId);\\n}\\n\\n// Function to notify store manager\\nfunction notifyStoreManager(message) {\\n    console.log(`Notifying store manager: ${message}`);\\n    event.notifyStoreManager(message);\\n}\\n\\n// Morning routine for store checkout\\nfunction morningCheckoutRoutine() {\\n    if (event.morningRoutine) {\\n        let queueStatus = monitorCheckoutQueues('store1');\\n        if (queueStatus.avgWaitTime > 10) {\\n            openCheckoutCounter('store1');\\n        }\\n        notifyStoreManager('Morning checkout queue check completed.');\\n    }\\n}\\n\\n// Afternoon routine for store checkout\\nfunction afternoonCheckoutRoutine() {\\n    if (event.afternoonRoutine) {\\n        let queueStatus = monitorCheckoutQueues('store2');\\n        if (queueStatus.length > 5) {\\n            openCheckoutCounter('store2');\\n        }\\n        notifyStoreManager('Afternoon checkout queue check completed.');\\n    }\\n}\\n\\n// Evening routine for store checkout\\nfunction eveningCheckoutRoutine() {\\n    if (event.eveningRoutine) {\\n        let queueStatus = monitorCheckoutQueues('store3');\\n        if (queueStatus.length == 0) {\\n            notifyStoreManager('No queues at store3.');\\n        }\\n        notifyStoreManager('Evening checkout queue check completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningCheckoutRoutine, monitor the checkout queues in store1. If the average wait time is greater than 10 minutes, open an additional checkout counter. Notify the store manager that the morning checkout queue check is completed. When in the afternoonCheckoutRoutine, monitor the checkout queues in store2. If the queue length is greater than 5, open an additional checkout counter. Notify the store manager that the afternoon checkout queue check is completed. When in the eveningCheckoutRoutine, monitor the checkout queues in store3. If there are no queues, notify the store manager that there are no queues at store3. Notify the store manager that the evening checkout queue check is completed.",
        "class": "store",
        "template_docstring": "WHEN in the morningCheckoutRoutine, DO monitor the checkout queues in store1; IF the average wait time is greater than 10 minutes, THEN open an additional checkout counter; notify the store manager that the morning checkout queue check is completed; WHEN in the afternoonCheckoutRoutine, DO monitor the checkout queues in store2; IF the queue length is greater than 5, THEN open an additional checkout counter; notify the store manager that the afternoon checkout queue check is completed; WHEN in the eveningCheckoutRoutine, DO monitor the checkout queues in store3; IF there are no queues, THEN notify the store manager that there are no queues at store3; notify the store manager that the evening checkout queue check is completed."
    },
    {
        "code": "// Function to monitor foot traffic\\nfunction monitorFootTraffic(storeId) {\\n    let footTraffic = event.getFootTraffic(storeId);\\n    console.log(`Foot traffic for store ${storeId}: ${footTraffic}`);\\n    return footTraffic;\\n}\\n\\n// Function to adjust store layout\\nfunction adjustStoreLayout(storeId, layout) {\\n    console.log(`Adjusting layout for store ${storeId} to ${layout}.`);\\n    event.adjustStoreLayout(storeId, layout);\\n}\\n\\n// Function to notify store planner\\nfunction notifyStorePlanner(message) {\\n    console.log(`Notifying store planner: ${message}`);\\n    event.notifyStorePlanner(message);\\n}\\n\\n// Morning routine for foot traffic management\\nfunction morningFootTrafficRoutine() {\\n    if (event.morningRoutine) {\\n        let footTraffic = monitorFootTraffic('store1');\\n        if (footTraffic > 100) {\\n            adjustStoreLayout('store1', 'open layout');\\n        }\\n        notifyStorePlanner('Morning foot traffic management completed.');\\n    }\\n}\\n\\n// Afternoon routine for foot traffic management\\nfunction afternoonFootTrafficRoutine() {\\n    if (event.afternoonRoutine) {\\n        let footTraffic = monitorFootTraffic('store2');\\n        if (footTraffic > 200) {\\n            adjustStoreLayout('store2', 'wide aisles');\\n        }\\n        notifyStorePlanner('Afternoon foot traffic management completed.');\\n    }\\n}\\n\\n// Evening routine for foot traffic management\\nfunction eveningFootTrafficRoutine() {\\n    if (event.eveningRoutine) {\\n        let footTraffic = monitorFootTraffic('store3');\\n        if (footTraffic < 50) {\\n            adjustStoreLayout('store3', 'compact layout');\\n        }\\n        notifyStorePlanner('Evening foot traffic management completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningFootTrafficRoutine, monitor the foot traffic in store1. If the foot traffic is greater than 100, adjust the store layout to an open layout. Notify the store planner that the morning foot traffic management is completed. When in the afternoonFootTrafficRoutine, monitor the foot traffic in store2. If the foot traffic is greater than 200, adjust the store layout to wide aisles. Notify the store planner that the afternoon foot traffic management is completed. When in the eveningFootTrafficRoutine, monitor the foot traffic in store3. If the foot traffic is less than 50, adjust the store layout to a compact layout. Notify the store planner that the evening foot traffic management is completed.",
        "class": "store",
        "template_docstring": "WHEN in the morningFootTrafficRoutine, DO monitor the foot traffic in store1; IF the foot traffic is greater than 100, THEN adjust the store layout to an open layout; notify the store planner that the morning foot traffic management is completed; WHEN in the afternoonFootTrafficRoutine, DO monitor the foot traffic in store2; IF the foot traffic is greater than 200, THEN adjust the store layout to wide aisles; notify the store planner that the afternoon foot traffic management is completed; WHEN in the eveningFootTrafficRoutine, DO monitor the foot traffic in store3; IF the foot traffic is less than 50, THEN adjust the store layout to a compact layout; notify the store planner that the evening foot traffic management is completed."
    },
    {
        "code": "// Function to play media\\nfunction playMedia(device, media) {\\n    console.log(`Playing ${media} on ${device}.`);\\n    event.playMedia(device, media);\\n}\\n\\n// Function to adjust volume\\nfunction adjustVolume(device, level) {\\n    console.log(`Adjusting volume on ${device} to ${level}.`);\\n    event.adjustVolume(device, level);\\n}\\n\\n// Function to alert family members\\nfunction alertFamilyMembers(message) {\\n    console.log(`Alerting family members: ${message}`);\\n    event.alertFamilyMembers(message);\\n}\\n\\n// Morning routine for home entertainment\\nfunction morningHomeRoutine() {\\n    if (event.morningRoutine) {\\n        playMedia('livingRoomTV', 'morning news');\\n        adjustVolume('livingRoomTV', 15);\\n        alertFamilyMembers('Morning entertainment started.');\\n    }\\n}\\n\\n// Afternoon routine for home entertainment\\nfunction afternoonHomeRoutine() {\\n    if (event.afternoonRoutine) {\\n        playMedia('homeTheater', 'afternoon movie');\\n        adjustVolume('homeTheater', 20);\\n        alertFamilyMembers('Afternoon entertainment started.');\\n    }\\n}\\n\\n// Evening routine for home entertainment\\nfunction eveningHomeRoutine() {\\n    if (event.eveningRoutine) {\\n        playMedia('bedroomSpeaker', 'relaxing music');\\n        adjustVolume('bedroomSpeaker', 10);\\n        alertFamilyMembers('Evening entertainment started.');\\n    }\\n}",
        "accurate_docstring": "When in the morningHomeRoutine, play the morning news on the living room TV and adjust the volume to 15. Alert family members that the morning entertainment has started. When in the afternoonHomeRoutine, play an afternoon movie on the home theater system and adjust the volume to 20. Alert family members that the afternoon entertainment has started. When in the eveningHomeRoutine, play relaxing music on the bedroom speaker and adjust the volume to 10. Alert family members that the evening entertainment has started.",
        "class": "store",
        "template_docstring": "WHEN in the morningHomeRoutine, DO play the morning news on the living room TV and adjust the volume to 15; alert family members that the morning entertainment has started; WHEN in the afternoonHomeRoutine, DO play an afternoon movie on the home theater system and adjust the volume to 20; alert family members that the afternoon entertainment has started; WHEN in the eveningHomeRoutine, DO play relaxing music on the bedroom speaker and adjust the volume to 10; alert family members that the evening entertainment has started."
    },
    {
        "code": "// Function to monitor occupancy\\nfunction monitorOccupancy(facilityId) {\\n    let occupancy = event.getOccupancy(facilityId);\\n    console.log(`Occupancy in facility ${facilityId}: ${occupancy}`);\\n    return occupancy;\\n}\\n\\n// Function to adjust lighting\\nfunction adjustFacilityLighting(facilityId, setting) {\\n    console.log(`Adjusting lighting in facility ${facilityId} to ${setting}.`);\\n    event.adjustFacilityLighting(facilityId, setting);\\n}\\n\\n// Function to notify facility manager\\nfunction notifyFacilityManager(message) {\\n    console.log(`Notifying facility manager: ${message}`);\\n    event.notifyFacilityManager(message);\\n}\\n\\n// Morning routine for sports facility\\nfunction morningSportsRoutine() {\\n    if (event.morningRoutine) {\\n        let occupancy = monitorOccupancy('facility1');\\n        if (occupancy > 50) {\\n            adjustFacilityLighting('facility1', 'increase');\\n        }\\n        notifyFacilityManager('Morning sports facility check completed.');\\n    }\\n}\\n\\n// Afternoon routine for sports facility\\nfunction afternoonSportsRoutine() {\\n    if (event.afternoonRoutine) {\\n        let occupancy = monitorOccupancy('facility2');\\n        if (occupancy < 20) {\\n            adjustFacilityLighting('facility2', 'decrease');\\n        }\\n        notifyFacilityManager('Afternoon sports facility check completed.');\\n    }\\n}\\n\\n// Evening routine for sports facility\\nfunction eveningSportsRoutine() {\\n    if (event.eveningRoutine) {\\n        let occupancy = monitorOccupancy('facility3');\\n        if (occupancy > 30) {\\n            adjustFacilityLighting('facility3', 'increase');\\n        }\\n        notifyFacilityManager('Evening sports facility check completed.');\\n    }\\n}",
        "accurate_docstring": "When in the morningSportsRoutine, monitor the occupancy in facility1. If the occupancy is greater than 50, adjust the lighting to increase. Notify the facility manager that the morning sports facility check is completed. When in the afternoonSportsRoutine, monitor the occupancy in facility2. If the occupancy is less than 20, adjust the lighting to decrease. Notify the facility manager that the afternoon sports facility check is completed. When in the eveningSportsRoutine, monitor the occupancy in facility3. If the occupancy is greater than 30, adjust the lighting to increase. Notify the facility manager that the evening sports facility check is completed.",
        "class": "store",
        "template_docstring": "WHEN in the morningSportsRoutine, DO monitor the occupancy in facility1; IF the occupancy is greater than 50, THEN adjust the lighting to increase; notify the facility manager that the morning sports facility check is completed; WHEN in the afternoonSportsRoutine, DO monitor the occupancy in facility2; IF the occupancy is less than 20, THEN adjust the lighting to decrease; notify the facility manager that the afternoon sports facility check is completed; WHEN in the eveningSportsRoutine, DO monitor the occupancy in facility3; IF the occupancy is greater than 30, THEN adjust the lighting to increase; notify the facility manager that the evening sports facility check is completed."
    }
]